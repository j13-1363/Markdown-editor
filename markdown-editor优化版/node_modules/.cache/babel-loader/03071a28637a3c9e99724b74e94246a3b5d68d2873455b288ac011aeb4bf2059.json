{"ast":null,"code":"import \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.string.starts-with.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.url.js\";\nimport \"core-js/modules/web.url.to-json.js\";\nimport \"core-js/modules/web.url-search-params.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport { marked } from 'marked';\nimport hljs from 'highlight.js';\nimport FloatingMenu from './components/FloatingMenu.vue';\nimport EditorToolbar from './components/EditorToolbar.vue';\nexport default {\n  components: {\n    FloatingMenu: FloatingMenu,\n    EditorToolbar: EditorToolbar\n  },\n  data: function data() {\n    return {\n      markdownContent: '## 欢迎使用\\n\\n**加粗** *斜体*',\n      previewContent: '',\n      theme: 'light',\n      hasSelection: false,\n      currentFormats: {},\n      selection: {\n        start: 0,\n        end: 0,\n        text: ''\n      }\n    };\n  },\n  mounted: function mounted() {\n    marked.setOptions({\n      highlight: function highlight(code) {\n        return hljs.highlightAuto(code).value;\n      }\n    });\n    this.updatePreview();\n  },\n  methods: {\n    updateSelection: function updateSelection() {\n      var editor = this.$refs.editor;\n      this.selection = {\n        start: editor.selectionStart,\n        end: editor.selectionEnd,\n        text: this.markdownContent.slice(editor.selectionStart, editor.selectionEnd)\n      };\n      this.hasSelection = this.selection.text.length > 0;\n    },\n    updatePreview: function updatePreview() {\n      this.previewContent = marked(this.markdownContent);\n    },\n    handleFormat: function handleFormat(type) {\n      var _this = this;\n      var editor = this.$refs.editor;\n      var _this$selection = this.selection,\n        start = _this$selection.start,\n        end = _this$selection.end,\n        text = _this$selection.text;\n\n      // 简单粗暴的格式处理\n      var formats = {\n        bold: {\n          prefix: '**',\n          suffix: '**'\n        },\n        italic: {\n          prefix: '_',\n          suffix: '_'\n        },\n        h1: {\n          prefix: '# ',\n          suffix: ''\n        },\n        h2: {\n          prefix: '## ',\n          suffix: ''\n        },\n        h3: {\n          prefix: '### ',\n          suffix: ''\n        },\n        ul: {\n          prefix: '- ',\n          suffix: ''\n        },\n        ol: {\n          prefix: '1. ',\n          suffix: ''\n        }\n      };\n      if (formats[type]) {\n        var _formats$type = formats[type],\n          prefix = _formats$type.prefix,\n          suffix = _formats$type.suffix;\n        var newText = text.startsWith(prefix) ? text.slice(prefix.length, suffix ? -suffix.length : undefined) : prefix + text + suffix;\n        this.markdownContent = this.markdownContent.slice(0, start) + newText + this.markdownContent.slice(end);\n        this.$nextTick(function () {\n          editor.focus();\n          editor.setSelectionRange(start, start + newText.length);\n          _this.updatePreview();\n        });\n      }\n    },\n    changeTheme: function changeTheme() {\n      this.theme = this.theme === 'light' ? 'dark' : 'light';\n    },\n    // 文件操作（简化版）\n    saveFile: function saveFile() {\n      var blob = new Blob([this.markdownContent], {\n        type: 'text/markdown'\n      });\n      var link = document.createElement('a');\n      link.href = URL.createObjectURL(blob);\n      link.download = 'document.md';\n      link.click();\n    },\n    loadFile: function loadFile() {\n      var _this2 = this;\n      var input = document.createElement('input');\n      input.type = 'file';\n      input.onchange = function (e) {\n        var file = e.target.files[0];\n        var reader = new FileReader();\n        reader.onload = function () {\n          _this2.markdownContent = reader.result;\n          _this2.updatePreview();\n        };\n        reader.readAsText(file);\n      };\n      input.click();\n    }\n  }\n};","map":{"version":3,"names":["marked","hljs","FloatingMenu","EditorToolbar","components","data","markdownContent","previewContent","theme","hasSelection","currentFormats","selection","start","end","text","mounted","setOptions","highlight","code","highlightAuto","value","updatePreview","methods","updateSelection","editor","$refs","selectionStart","selectionEnd","slice","length","handleFormat","type","_this","_this$selection","formats","bold","prefix","suffix","italic","h1","h2","h3","ul","ol","_formats$type","newText","startsWith","undefined","$nextTick","focus","setSelectionRange","changeTheme","saveFile","blob","Blob","link","document","createElement","href","URL","createObjectURL","download","click","loadFile","_this2","input","onchange","e","file","target","files","reader","FileReader","onload","result","readAsText"],"sources":["src/App.vue"],"sourcesContent":["<template>\n  <div :class=\"['app-container', theme]\">\n    <!-- 悬浮菜单 -->\n    <floating-menu\n      @save=\"saveFile\"\n      @load=\"loadFile\"\n      @export-md=\"exportFile\"\n      @import=\"importFile\"\n      @export-html=\"exportAsHTML\"\n      @export-pdf=\"exportAsPDF\"\n    />\n\n    <!-- 工具栏 -->\n    <editor-toolbar\n      :has-selection=\"hasSelection\"\n      :current-formats=\"currentFormats\"\n      :theme=\"theme\"\n      @format=\"handleFormat\"\n      @change-theme=\"changeTheme\"\n    />\n\n    <!-- 编辑器区域 -->\n    <div class=\"editor-preview\">\n      <div class=\"editor\">\n        <textarea\n          ref=\"editor\"\n          v-model=\"markdownContent\"\n          @input=\"updatePreview\"\n          @mouseup=\"updateSelection\"\n          @keyup=\"updateSelection\"\n        ></textarea>\n      </div>\n      <div class=\"preview\" v-html=\"previewContent\"></div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { marked } from 'marked'\nimport hljs from 'highlight.js'\nimport FloatingMenu from './components/FloatingMenu.vue'\nimport EditorToolbar from './components/EditorToolbar.vue'\n\nexport default {\n  components: {\n    FloatingMenu,\n    EditorToolbar\n  },\n  data() {\n    return {\n      markdownContent: '## 欢迎使用\\n\\n**加粗** *斜体*',\n      previewContent: '',\n      theme: 'light',\n      hasSelection: false,\n      currentFormats: {},\n      selection: { start: 0, end: 0, text: '' }\n    }\n  },\n  mounted() {\n    marked.setOptions({\n      highlight: (code) => hljs.highlightAuto(code).value\n    })\n    this.updatePreview()\n  },\n  methods: {\n    updateSelection() {\n      const editor = this.$refs.editor\n      this.selection = {\n        start: editor.selectionStart,\n        end: editor.selectionEnd,\n        text: this.markdownContent.slice(editor.selectionStart, editor.selectionEnd)\n      }\n      this.hasSelection = this.selection.text.length > 0\n    },\n    \n    updatePreview() {\n      this.previewContent = marked(this.markdownContent)\n    },\n\n    handleFormat(type) {\n      const editor = this.$refs.editor\n      const { start, end, text } = this.selection\n      \n      // 简单粗暴的格式处理\n      const formats = {\n        bold: { prefix: '**', suffix: '**' },\n        italic: { prefix: '_', suffix: '_' },\n        h1: { prefix: '# ', suffix: '' },\n        h2: { prefix: '## ', suffix: '' },\n        h3: { prefix: '### ', suffix: '' },\n        ul: { prefix: '- ', suffix: '' },\n        ol: { prefix: '1. ', suffix: '' }\n      }\n\n      if (formats[type]) {\n        const { prefix, suffix } = formats[type]\n        const newText = text.startsWith(prefix) ? \n          text.slice(prefix.length, suffix ? -suffix.length : undefined) : \n          prefix + text + suffix\n        \n        this.markdownContent = \n          this.markdownContent.slice(0, start) + \n          newText + \n          this.markdownContent.slice(end)\n        \n        this.$nextTick(() => {\n          editor.focus()\n          editor.setSelectionRange(start, start + newText.length)\n          this.updatePreview()\n        })\n      }\n    },\n\n    changeTheme() {\n      this.theme = this.theme === 'light' ? 'dark' : 'light'\n    },\n\n    // 文件操作（简化版）\n    saveFile() {\n      const blob = new Blob([this.markdownContent], { type: 'text/markdown' })\n      const link = document.createElement('a')\n      link.href = URL.createObjectURL(blob)\n      link.download = 'document.md'\n      link.click()\n    },\n\n    loadFile() {\n      const input = document.createElement('input')\n      input.type = 'file'\n      input.onchange = e => {\n        const file = e.target.files[0]\n        const reader = new FileReader()\n        reader.onload = () => {\n          this.markdownContent = reader.result\n          this.updatePreview()\n        }\n        reader.readAsText(file)\n      }\n      input.click()\n    }\n  }\n}\n</script>\n\n<style>\n/* 简单样式 */\n.app-container, .editor-preview {\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n}\n.editor, .preview {\n  flex: 1;\n  padding: 20px;\n  overflow: auto;\n}\n.editor textarea {\n  width: 100%;\n  height: 100%;\n  border: none;\n  resize: none;\n  font-family: monospace;\n}\n.preview {\n  border-left: 1px solid #eee;\n}\n.dark {\n  background: #333;\n  color: white;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
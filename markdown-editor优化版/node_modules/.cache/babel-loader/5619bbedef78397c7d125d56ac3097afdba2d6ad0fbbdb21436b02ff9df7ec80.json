{"ast":null,"code":"import _defineProperty from \"D:/\\u4F5C\\u4E1A/markdown-editor\\u4F18\\u5316\\u7248/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _regenerator from \"D:/\\u4F5C\\u4E1A/markdown-editor\\u4F18\\u5316\\u7248/node_modules/@babel/runtime/helpers/esm/regenerator.js\";\nimport _asyncToGenerator from \"D:/\\u4F5C\\u4E1A/markdown-editor\\u4F18\\u5316\\u7248/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.string.trim.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.url.js\";\nimport \"core-js/modules/web.url.to-json.js\";\nimport \"core-js/modules/web.url-search-params.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport { marked } from 'marked';\nimport hljs from 'highlight.js';\nimport { exportAsHTML as _exportAsHTML, exportAsPDF as _exportAsPDF } from './lib/exportUtils.js';\nimport { formatHelpers } from './lib/formatUtils.js';\nexport default {\n  data: function data() {\n    return {\n      markdownContent: '',\n      previewContent: '',\n      theme: 'light',\n      fontFamily: \"'Courier New', monospace\",\n      fontSize: '14px',\n      hasSelection: false,\n      showFileMenu: false,\n      toolbarButtons: [{\n        name: '加粗',\n        action: 'bold',\n        requiresSelection: true\n      }, {\n        name: '斜体',\n        action: 'italic',\n        requiresSelection: true\n      }, {\n        name: 'H1',\n        action: 'h1',\n        requiresSelection: true\n      }, {\n        name: 'H2',\n        action: 'h2',\n        requiresSelection: true\n      }, {\n        name: 'H3',\n        action: 'h3',\n        requiresSelection: true\n      }, {\n        name: '无序列表',\n        action: 'ul',\n        requiresSelection: true\n      }, {\n        name: '有序列表',\n        action: 'ol',\n        requiresSelection: true\n      }, {\n        name: '行内代码',\n        action: 'code',\n        requiresSelection: true\n      }, {\n        name: '代码块',\n        action: 'codeblock',\n        requiresSelection: true\n      }, {\n        name: '表格设置',\n        action: 'table',\n        requiresSelection: true\n      }, {\n        name: '插入图片',\n        action: 'image',\n        requiresSelection: false\n      }, {\n        name: '插入链接',\n        action: 'link',\n        requiresSelection: false\n      }]\n    };\n  },\n  mounted: function mounted() {\n    marked.setOptions({\n      highlight: function highlight(code) {\n        return hljs.highlightAuto(code).value;\n      }\n    });\n    this.updatePreview();\n    document.addEventListener('click', this.closeFileMenu);\n  },\n  beforeDestroy: function beforeDestroy() {\n    document.removeEventListener('click', this.closeFileMenu);\n  },\n  methods: _defineProperty(_defineProperty({\n    updatePreview: function updatePreview() {\n      this.previewContent = marked.parse(this.getMarkdownContent());\n    },\n    updateSelection: function updateSelection() {\n      var selection = window.getSelection();\n      this.hasSelection = selection.rangeCount > 0 && selection.toString().trim() !== '';\n    },\n    handleFormat: function handleFormat(type) {\n      var selection = this.getSelectionRange();\n      var content = this.getMarkdownContent();\n      if (type === 'image') {\n        this.handleImageSelect();\n        return;\n      }\n      if (type === 'link') {\n        this.insertLink(selection);\n        return;\n      }\n      var result = formatHelpers[type](content, selection);\n      this.setMarkdownContent(result.content);\n      this.$refs.editor.focus();\n      this.updatePreview();\n    },\n    getSelectionRange: function getSelectionRange() {\n      var selection = window.getSelection();\n      if (!selection.rangeCount) return {\n        start: 0,\n        end: 0,\n        text: ''\n      };\n      var range = selection.getRangeAt(0).cloneRange();\n      range.selectNodeContents(this.$refs.editor);\n      var start = range.toString().length;\n      range.setEnd(selection.anchorNode, selection.anchorOffset);\n      var startPos = range.toString().length;\n      range.setStart(selection.focusNode, selection.focusOffset);\n      var endPos = range.toString().length;\n      return {\n        start: Math.min(startPos, endPos),\n        end: Math.max(startPos, endPos),\n        text: selection.toString()\n      };\n    },\n    getMarkdownContent: function getMarkdownContent() {\n      var nodes = Array.from(this.$refs.editor.childNodes);\n      return nodes.map(function (node) {\n        if (node.tagName === 'IMG') {\n          return \"![\\u56FE\\u7247](\".concat(node.src, \")\");\n        }\n        return node.textContent || node.outerHTML;\n      }).join('');\n    },\n    setMarkdownContent: function setMarkdownContent(content) {\n      this.$refs.editor.innerHTML = '';\n      this.$refs.editor.textContent = content;\n      this.updatePreview();\n    },\n    handleImageSelect: function handleImageSelect() {\n      this.$refs.imageInput.click();\n    },\n    handleImageUpload: function handleImageUpload(event) {\n      var _this = this;\n      var file = event.target.files[0];\n      if (!file) return;\n      var reader = new FileReader();\n      reader.onload = function (e) {\n        var base64 = e.target.result;\n        var selection = _this.getSelectionRange();\n        var result = formatHelpers.image(_this.getMarkdownContent(), selection, base64);\n        _this.setMarkdownContent(result.content);\n        _this.updatePreview();\n      };\n      reader.readAsDataURL(file);\n    },\n    insertLink: function insertLink(selection) {\n      var linkText = prompt('输入链接文本:', selection.text) || selection.text;\n      var url = prompt('输入链接地址:');\n      if (!url) return;\n      var markdownLink = \"[\".concat(linkText, \"](\").concat(url, \")\");\n      var content = this.getMarkdownContent();\n      var newContent = content.slice(0, selection.start) + markdownLink + content.slice(selection.end);\n      this.setMarkdownContent(newContent);\n      this.updatePreview();\n    },\n    changeTheme: function changeTheme() {\n      this.theme = this.theme === 'light' ? 'dark' : 'light';\n      document.documentElement.setAttribute('data-theme', this.theme);\n    },\n    saveFile: function saveFile() {\n      var blob = new Blob([this.markdownContent], {\n        type: 'text/markdown'\n      });\n      var link = document.createElement('a');\n      link.href = URL.createObjectURL(blob);\n      link.download = 'document.md';\n      link.click();\n    },\n    loadFile: function loadFile() {\n      var _this2 = this;\n      var input = document.createElement('input');\n      input.type = 'file';\n      input.accept = '.md,.markdown';\n      input.onchange = function (e) {\n        var file = e.target.files[0];\n        var reader = new FileReader();\n        reader.onload = function () {\n          _this2.markdownContent = reader.result;\n          _this2.updatePreview();\n        };\n        reader.readAsText(file);\n      };\n      input.click();\n    },\n    exportAsHTML: function exportAsHTML() {\n      _exportAsHTML(this.previewContent, 'markdown_export', {\n        theme: this.theme\n      });\n    },\n    exportAsPDF: function exportAsPDF() {\n      var _this3 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee() {\n        var _t;\n        return _regenerator().w(function (_context) {\n          while (1) switch (_context.p = _context.n) {\n            case 0:\n              _context.p = 0;\n              _context.n = 1;\n              return _exportAsPDF(_this3.previewContent, 'markdown_export', {\n                theme: _this3.theme\n              });\n            case 1:\n              _context.n = 3;\n              break;\n            case 2:\n              _context.p = 2;\n              _t = _context.v;\n              console.error('导出PDF失败:', _t);\n              alert('导出PDF失败，请重试');\n            case 3:\n              return _context.a(2);\n          }\n        }, _callee, null, [[0, 2]]);\n      }))();\n    }\n  }, \"handleImageSelect\", function handleImageSelect() {\n    this.$refs.imageInput.click();\n  }), \"handleImageUpload\", function handleImageUpload(event) {\n    var _this4 = this;\n    var file = event.target.files[0];\n    if (!file) return;\n    var reader = new FileReader();\n    reader.onload = function (e) {\n      var base64 = e.target.result;\n      var selection = {\n        start: _this4.getSelectionStart(),\n        end: _this4.getSelectionEnd(),\n        text: ''\n      };\n      var result = formatHelpers.image(_this4.markdownContent, selection, base64);\n      _this4.markdownContent = result.content;\n      _this4.$refs.editor.focus();\n      _this4.updatePreview();\n    };\n    reader.readAsDataURL(file);\n  })\n};","map":{"version":3,"names":["marked","hljs","exportAsHTML","exportAsPDF","formatHelpers","data","markdownContent","previewContent","theme","fontFamily","fontSize","hasSelection","showFileMenu","toolbarButtons","name","action","requiresSelection","mounted","setOptions","highlight","code","highlightAuto","value","updatePreview","document","addEventListener","closeFileMenu","beforeDestroy","removeEventListener","methods","_defineProperty","parse","getMarkdownContent","updateSelection","selection","window","getSelection","rangeCount","toString","trim","handleFormat","type","getSelectionRange","content","handleImageSelect","insertLink","result","setMarkdownContent","$refs","editor","focus","start","end","text","range","getRangeAt","cloneRange","selectNodeContents","length","setEnd","anchorNode","anchorOffset","startPos","setStart","focusNode","focusOffset","endPos","Math","min","max","nodes","Array","from","childNodes","map","node","tagName","concat","src","textContent","outerHTML","join","innerHTML","imageInput","click","handleImageUpload","event","_this","file","target","files","reader","FileReader","onload","e","base64","image","readAsDataURL","linkText","prompt","url","markdownLink","newContent","slice","changeTheme","documentElement","setAttribute","saveFile","blob","Blob","link","createElement","href","URL","createObjectURL","download","loadFile","_this2","input","accept","onchange","readAsText","_this3","_asyncToGenerator","_regenerator","m","_callee","_t","w","_context","p","n","v","console","error","alert","a","_this4","getSelectionStart","getSelectionEnd"],"sources":["src/App.vue"],"sourcesContent":["<template>\n  <div class=\"app-container\" :data-theme=\"theme\">\n    <!-- 顶部工具栏 -->\n    <div class=\"toolbar\">\n      <!-- 文件菜单 -->\n      <div class=\"file-menu-wrapper\" ref=\"fileMenu\">\n        <button \n          class=\"file-menu-btn\" \n          @click.stop=\"toggleFileMenu\"\n          :class=\"{ 'active': showFileMenu }\"\n        >\n          <span>文件 ▼</span>\n        </button>\n        <transition name=\"fade\">\n          <div \n            v-show=\"showFileMenu\" \n            class=\"file-menu-dropdown\"\n            @click.stop\n          >\n            <button @click=\"handleMenuClick('save')\">保存</button>\n            <button @click=\"handleMenuClick('load')\">打开</button>\n            <button @click=\"handleMenuClick('exportHTML')\">导出HTML</button>\n            <button @click=\"handleMenuClick('exportPDF')\">导出PDF</button>\n          </div>\n        </transition>\n      </div>\n\n      <!-- 格式按钮 -->\n      <div class=\"format-buttons\">\n        <button \n          v-for=\"btn in toolbarButtons\" \n          :key=\"btn.name\"\n          @click=\"handleFormat(btn.action)\"\n          :disabled=\"btn.requiresSelection && !hasSelection\"\n          class=\"tool-btn\"\n        >\n          {{ btn.name }}\n        </button>\n      </div>\n\n      <!-- 字体设置 -->\n      <div class=\"font-settings\">\n        <select v-model=\"fontFamily\" class=\"font-select\">\n          <option value=\"'Courier New', monospace\">等宽字体</option>\n          <option value=\"Arial, sans-serif\">Arial</option>\n          <option value=\"'Times New Roman', serif\">Times New Roman</option>\n        </select>\n        <select v-model=\"fontSize\" class=\"size-select\">\n          <option value=\"14px\">小</option>\n          <option value=\"16px\">中</option>\n          <option value=\"18px\">大</option>\n        </select>\n        <button @click=\"changeTheme\" class=\"theme-btn\">\n          {{ theme === 'light' ? '🌙 夜间' : '☀️ 白天' }}\n        </button>\n      </div>\n\n      <!-- 隐藏的图片输入 -->\n      <input \n        ref=\"imageInput\" \n        type=\"file\" \n        accept=\"image/*\" \n        @change=\"handleImageUpload\" \n        style=\"display: none;\"\n      />\n    </div>\n\n    <!-- 编辑区和预览区 -->\n    <div class=\"editor-wrapper\">\n      <div \n        ref=\"editor\"\n        class=\"editor\"\n        contenteditable=\"true\"\n        @input=\"updatePreview\"\n        @mouseup=\"updateSelection\"\n        :style=\"{ fontFamily, fontSize }\"\n        placeholder=\"在这里输入Markdown内容...\"\n      ></div>\n      <div class=\"preview\" :style=\"{ fontFamily, fontSize }\" v-html=\"previewContent\"></div>\n    </div>\n  </div>\n</template>\n\n\n<script>\nimport { marked } from 'marked'\nimport hljs from 'highlight.js'\nimport { exportAsHTML, exportAsPDF } from './lib/exportUtils.js'\nimport { formatHelpers } from './lib/formatUtils.js'\n\nexport default {\n  data() {\n    return {\n      markdownContent: '',\n      previewContent: '',\n      theme: 'light',\n      fontFamily: \"'Courier New', monospace\",\n      fontSize: '14px',\n      hasSelection: false,\n      showFileMenu: false,\n      toolbarButtons: [\n        { name: '加粗', action: 'bold', requiresSelection: true },\n        { name: '斜体', action: 'italic', requiresSelection: true },\n        { name: 'H1', action: 'h1', requiresSelection: true },\n        { name: 'H2', action: 'h2', requiresSelection: true },\n        { name: 'H3', action: 'h3', requiresSelection: true },\n        { name: '无序列表', action: 'ul', requiresSelection: true },\n        { name: '有序列表', action: 'ol', requiresSelection: true },\n        { name: '行内代码', action: 'code', requiresSelection: true },\n        { name: '代码块', action: 'codeblock', requiresSelection: true },\n        { name: '表格设置', action: 'table', requiresSelection: true },\n        { name: '插入图片', action: 'image', requiresSelection: false },\r\n\t\t{ name: '插入链接', action: 'link', requiresSelection: false }\n      ]\n    }\n  },\n  mounted() {\n    marked.setOptions({\n      highlight: (code) => hljs.highlightAuto(code).value\n    })\n    this.updatePreview()\n    document.addEventListener('click', this.closeFileMenu)\n  },\n  beforeDestroy() {\n    document.removeEventListener('click', this.closeFileMenu)\n  },\n  methods: {\n    updatePreview() {\n      this.previewContent = marked.parse(this.getMarkdownContent())\n    },\n    updateSelection() {\n      const selection = window.getSelection()\n      this.hasSelection = selection.rangeCount > 0 && selection.toString().trim() !== ''\n    },\n    handleFormat(type) {\n      const selection = this.getSelectionRange()\n      const content = this.getMarkdownContent()\n\n      if (type === 'image') {\n        this.handleImageSelect()\n        return\n      }\n      if (type === 'link') {\n        this.insertLink(selection)\n        return\n      }\n\n      const result = formatHelpers[type](content, selection)\n      this.setMarkdownContent(result.content)\n      this.$refs.editor.focus()\n      this.updatePreview()\n    },\n    getSelectionRange() {\n      const selection = window.getSelection()\n      if (!selection.rangeCount) return { start: 0, end: 0, text: '' }\n\n      const range = selection.getRangeAt(0).cloneRange()\n      range.selectNodeContents(this.$refs.editor)\n      const start = range.toString().length\n      range.setEnd(selection.anchorNode, selection.anchorOffset)\n      const startPos = range.toString().length\n      range.setStart(selection.focusNode, selection.focusOffset)\n      const endPos = range.toString().length\n\n      return {\n        start: Math.min(startPos, endPos),\n        end: Math.max(startPos, endPos),\n        text: selection.toString()\n      }\n    },\n    getMarkdownContent() {\n      const nodes = Array.from(this.$refs.editor.childNodes)\n      return nodes.map(node => {\n        if (node.tagName === 'IMG') {\n          return `![图片](${node.src})`\n        }\n        return node.textContent || node.outerHTML\n      }).join('')\n    },\n    setMarkdownContent(content) {\n      this.$refs.editor.innerHTML = ''\n      this.$refs.editor.textContent = content\n      this.updatePreview()\n    },\n    handleImageSelect() {\n      this.$refs.imageInput.click()\n    },\n    handleImageUpload(event) {\n      const file = event.target.files[0]\n      if (!file) return\n\n      const reader = new FileReader()\n      reader.onload = (e) => {\n        const base64 = e.target.result\n        const selection = this.getSelectionRange()\n        const result = formatHelpers.image(this.getMarkdownContent(), selection, base64)\n        this.setMarkdownContent(result.content)\n        this.updatePreview()\n      }\n      reader.readAsDataURL(file)\n    },\n    insertLink(selection) {\n      const linkText = prompt('输入链接文本:', selection.text) || selection.text\n      const url = prompt('输入链接地址:')\n      if (!url) return\n\n      const markdownLink = `[${linkText}](${url})`\n      const content = this.getMarkdownContent()\n      const newContent = content.slice(0, selection.start) + markdownLink + content.slice(selection.end)\n      this.setMarkdownContent(newContent)\n      this.updatePreview()\n    },\r\n\t\n    changeTheme() {\n      this.theme = this.theme === 'light' ? 'dark' : 'light';\n      document.documentElement.setAttribute('data-theme', this.theme);\n    },\n    saveFile() {\n      const blob = new Blob([this.markdownContent], { type: 'text/markdown' })\n      const link = document.createElement('a')\n      link.href = URL.createObjectURL(blob)\n      link.download = 'document.md'\n      link.click()\n    },\n    loadFile() {\n      const input = document.createElement('input')\n      input.type = 'file'\n      input.accept = '.md,.markdown'\n      input.onchange = e => {\n        const file = e.target.files[0]\n        const reader = new FileReader()\n        reader.onload = () => {\n          this.markdownContent = reader.result\n          this.updatePreview()\n        }\n        reader.readAsText(file)\n      }\n      input.click()\n    },\n    exportAsHTML() {\n      exportAsHTML(this.previewContent, 'markdown_export', { theme: this.theme })\n    },\n    async exportAsPDF() {\n      try {\n        await exportAsPDF(this.previewContent, 'markdown_export', { theme: this.theme })\n      } catch (error) {\n        console.error('导出PDF失败:', error)\n        alert('导出PDF失败，请重试')\n      }\n    },\n    handleImageSelect() {\n      this.$refs.imageInput.click();\n    },\n    handleImageUpload(event) {\n      const file = event.target.files[0];\n      if (!file) return;\n\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        const base64 = e.target.result;\n        const selection = {\n          start: this.getSelectionStart(),\n          end: this.getSelectionEnd(),\n          text: ''\n        };\n        const result = formatHelpers.image(this.markdownContent, selection, base64);\n        this.markdownContent = result.content;\n        this.$refs.editor.focus();\n        this.updatePreview();\n      };\n      reader.readAsDataURL(file);\n    }\n  }\n}\n</script>\n\n<style>\n\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --bg-color: #ffffff;\n  --text-color: #333333;\n  --border-color: #e0e0e0;\n  --toolbar-bg: #f5f5f5;\n  --tool-btn-bg: #ffffff;\n  --tool-btn-hover: #eaeaea;\n  --menu-bg: #ffffff;\n  --menu-item-hover: #f0f0f0;\r\n  --table-header-bg: #f5f5f5;\r\n  --table-row-even-bg: #f9f9f9;\n}\n\n[data-theme=\"dark\"] {\n  --bg-color: #1e1e1e;\n  --text-color: #e0e0e0;\n  --border-color: #444444;\n  --toolbar-bg: #2d2d2d;\n  --tool-btn-bg: #3d3d3d;\n  --tool-btn-hover: #4d4d4d;\n  --menu-bg: #3d3d3d;\n  --menu-item-hover: #4d4d4d;\r\n  --table-header-bg: #3d3d3d;\r\n  --table-row-even-bg: #2d2d2d;\n}\n\n.app-container {\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  background-color: var(--bg-color);\n  color: var(--text-color);\n}\n\n/* 工具栏样式 */\n.toolbar {\n  padding: 8px 15px;\n  background-color: var(--toolbar-bg);\n  border-bottom: 1px solid var(--border-color);\n  display: flex;\n  align-items: center;\n  gap: 15px;\n}\n\n/* 文件菜单 */\n.file-menu-wrapper {\n  position: relative;\n  display: inline-block;\n}\n\n.file-menu-btn {\n  padding: 8px 15px;\n  background-color: var(--tool-btn-bg);\n  border: 1px solid var(--border-color);\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 14px;\n  transition: all 0.2s;\n}\n\n.file-menu-btn:hover, .file-menu-btn.active {\n  background-color: var(--tool-btn-hover);\n}\n\n.file-menu-dropdown {\n  position: absolute;\n  top: 100%;\n  left: 0;\n  min-width: 120px;\n  background-color: var(--menu-bg);\n  border: 1px solid var(--border-color);\n  border-radius: 4px;\n  box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n  z-index: 1000;\n  margin-top: 5px;\n}\n\n.file-menu-dropdown button {\n  display: block;\n  width: 100%;\n  padding: 8px 16px;\n  text-align: left;\n  background: none;\n  border: none;\n  color: var(--text-color);\n  cursor: pointer;\n}\n\n.file-menu-dropdown button:hover {\n  background-color: var(--menu-item-hover);\n}\n\n/* 过渡动画 */\n.fade-enter-active, .fade-leave-active {\n  transition: opacity 0.3s, transform 0.3s;\n}\n.fade-enter, .fade-leave-to {\n  opacity: 0;\n  transform: translateY(-10px);\n}\n\n/* 格式按钮 */\n.format-buttons {\n  display: flex;\n  gap: 8px;\n}\n\n.tool-btn {\n  padding: 8px 12px;\n  background-color: var(--tool-btn-bg);\n  border: 1px solid var(--border-color);\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 14px;\n  transition: all 0.2s;\n}\n\n.tool-btn:hover {\n  background-color: var(--tool-btn-hover);\n}\n\n.tool-btn:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n/* 字体设置 */\n.font-settings {\n  margin-left: auto;\n  display: flex;\n  gap: 8px;\n  align-items: center;\n}\n\n.font-select, .size-select {\n  padding: 6px 8px;\n  border: 1px solid var(--border-color);\n  border-radius: 4px;\n  background-color: var(--tool-btn-bg);\n  color: var(--text-color);\n}\n\n.theme-btn {\n  padding: 6px 12px;\n  background-color: var(--tool-btn-bg);\n  border: 1px solid var(--border-color);\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n/* 编辑器区域 */\n.editor-wrapper {\n  display: flex;\n  flex: 1;\n  overflow: hidden;\n}\n\n.editor, .preview {\n  flex: 1;\n  padding: 20px;\n  overflow: auto;\n}\n\n.editor {\n  border-right: 1px solid var(--border-color);\n  resize: none;\n  line-height: 1.6;\n  background-color: var(--bg-color);\n  color: var(--text-color);\r\n    padding: 20px;\r\n    border-right: 1px solid var(--border-color);\r\n    resize: none;\r\n    line-height: 1.6;\r\n    background-color: var(--bg-color);\r\n    color: var(--text-color);\r\n    outline: none;\r\n    min-height: 200px;\n}\r\n\n.preview {\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif;\n  line-height: 1.6;\n}\n\n/* 预览区域Markdown样式 */\r\n.preview table {\n  border-collapse: collapse;\n  width: 100%;\n  margin: 16px 0;\n  display: block;\n  overflow-x: auto;\n}\n\n.preview th, .preview td {\n  padding: 8px 12px;\n  border: 1px solid var(--border-color);\n}\n\n.preview th {\n  background-color: var(--table-header-bg);\n  font-weight: bold;\n}\n\n.preview tr:nth-child(even) {\n  background-color: var(--table-row-even-bg);\n}\n\n.preview h1, .preview h2, .preview h3 {\n  margin: 20px 0 10px;\n}\n\n.preview ul, .preview ol {\n  padding-left: 30px;\n  margin: 10px 0;\n}\n\n.preview code {\n  background-color: rgba(215, 215, 215, 0.2);\n  padding: 0.2em 0.4em;\n  border-radius: 3px;\n  font-family: 'Consolas', monospace;\n}\n\n.preview pre {\n  background-color: rgba(215, 215, 215, 0.2);\n  padding: 16px;\n  border-radius: 3px;\n  overflow: auto;\n  margin: 10px 0;\n}\n\n.preview blockquote {\n  border-left: 4px solid #dfe2e5;\n  color: #6a737d;\n  padding: 0 1em;\n  margin: 10px 0;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
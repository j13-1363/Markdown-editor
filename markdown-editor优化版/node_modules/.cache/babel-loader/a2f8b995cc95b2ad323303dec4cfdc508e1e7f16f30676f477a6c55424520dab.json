{"ast":null,"code":"import _regenerator from \"D:/\\u4F5C\\u4E1A/markdown-editor/node_modules/@babel/runtime/helpers/esm/regenerator.js\";\nimport _asyncToGenerator from \"D:/\\u4F5C\\u4E1A/markdown-editor/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { exportAsHTML, exportAsPDF } from '../lib/exportUtils';\nexport default {\n  name: 'FileMenu',\n  props: {\n    currentTheme: String,\n    markdownContent: String,\n    previewContent: String\n  },\n  data: function data() {\n    return {\n      isOpen: false,\n      fontFamily: \"'Courier New', monospace\",\n      fontSize: \"14px\"\n    };\n  },\n  methods: {\n    toggleMenu: function toggleMenu() {\n      this.isOpen = !this.isOpen;\n    },\n    handleSave: function handleSave() {\n      this.$emit('save');\n    },\n    handleLoad: function handleLoad() {\n      this.$emit('load');\n    },\n    handleExportHTML: function handleExportHTML() {\n      exportAsHTML(this.previewContent, 'markdown_export', {\n        theme: this.currentTheme\n      });\n    },\n    handleExportPDF: function handleExportPDF() {\n      var _this = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee() {\n        var _t;\n        return _regenerator().w(function (_context) {\n          while (1) switch (_context.p = _context.n) {\n            case 0:\n              _context.p = 0;\n              _context.n = 1;\n              return exportAsPDF(_this.previewContent, 'markdown_export', {\n                theme: _this.currentTheme\n              });\n            case 1:\n              _context.n = 3;\n              break;\n            case 2:\n              _context.p = 2;\n              _t = _context.v;\n              console.error('导出PDF失败:', _t);\n              _this.$Message.error('导出PDF失败!');\n            case 3:\n              return _context.a(2);\n          }\n        }, _callee, null, [[0, 2]]);\n      }))();\n    },\n    handleThemeChange: function handleThemeChange(theme) {\n      this.$emit('theme-change', theme);\n    }\n  },\n  watch: {\n    fontFamily: function fontFamily(newVal) {\n      this.$emit('font-change', {\n        family: newVal,\n        size: this.fontSize\n      });\n    },\n    fontSize: function fontSize(newVal) {\n      this.$emit('font-change', {\n        family: this.fontFamily,\n        size: newVal\n      });\n    }\n  }\n};","map":{"version":3,"names":["exportAsHTML","exportAsPDF","name","props","currentTheme","String","markdownContent","previewContent","data","isOpen","fontFamily","fontSize","methods","toggleMenu","handleSave","$emit","handleLoad","handleExportHTML","theme","handleExportPDF","_this","_asyncToGenerator","_regenerator","m","_callee","_t","w","_context","p","n","v","console","error","$Message","a","handleThemeChange","watch","newVal","family","size"],"sources":["src/components/FileMenu.vue"],"sourcesContent":["<template>\n  <div class=\"file-menu\">\n    <i-button \n      class=\"menu-toggle\"\n      type=\"text\" \n      icon=\"ios-menu\"\n      @click=\"toggleMenu\"\n    />\n    \n    <div class=\"menu-content\" :class=\"{ 'collapsed': !isOpen }\" @click.stop>\n      <div class=\"menu-section\">\n        <h3 class=\"menu-title\">\n          <i-icon type=\"md-folder\" /> 文件操作\n        </h3>\n        <i-button long icon=\"md-save\" @click=\"handleSave\">保存</i-button>\n        <i-button long icon=\"md-folder-open\" @click=\"handleLoad\">打开</i-button>\n        <i-button long icon=\"md-code\" @click=\"handleExportHTML\">导出HTML</i-button>\n        <i-button long icon=\"md-document\" @click=\"handleExportPDF\">导出PDF</i-button>\n      </div>\n\n      <div class=\"menu-section\">\n        <h3 class=\"menu-title\">\n          <i-icon type=\"md-color-palette\" /> 主题设置\n        </h3>\n        <i-radio-group :value=\"currentTheme\" @on-change=\"handleThemeChange\">\n          <i-radio label=\"light\"><i-icon type=\"md-sunny\" /> 白天</i-radio>\n          <i-radio label=\"dark\"><i-icon type=\"md-moon\" /> 夜间</i-radio>\n        </i-radio-group>\n      </div>\n\n      <div class=\"menu-section\">\n        <h3 class=\"menu-title\">\n          <i-icon type=\"md-options\" /> 字体设置\n        </h3>\n        <i-select v-model=\"fontFamily\" style=\"width:100%\">\n          <i-option value=\"'Courier New', monospace\">等宽字体</i-option>\n          <i-option value=\"Arial, sans-serif\">Arial</i-option>\n          <i-option value=\"'Times New Roman', serif\">Times New Roman</i-option>\n        </i-select>\n        <i-select v-model=\"fontSize\" style=\"width:100%\">\n          <i-option value=\"14px\">小号</i-option>\n          <i-option value=\"16px\">中号</i-option>\n          <i-option value=\"18px\">大号</i-option>\n        </i-select>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { exportAsHTML, exportAsPDF } from '../lib/exportUtils'\n\nexport default {\n  name: 'FileMenu',\n  props: {\n    currentTheme: String,\n    markdownContent: String,\n    previewContent: String\n  },\n  data() {\n    return {\n      isOpen: false,\n      fontFamily: \"'Courier New', monospace\",\n      fontSize: \"14px\"\n    }\n  },\n  methods: {\n    toggleMenu() {\n      this.isOpen = !this.isOpen\n    },\n    handleSave() {\n      this.$emit('save')\n    },\n    handleLoad() {\n      this.$emit('load')\n    },\n    handleExportHTML() {\n      exportAsHTML(this.previewContent, 'markdown_export', { theme: this.currentTheme })\n    },\n    async handleExportPDF() {\n      try {\n        await exportAsPDF(this.previewContent, 'markdown_export', { theme: this.currentTheme })\n      } catch (error) {\n        console.error('导出PDF失败:', error)\n        this.$Message.error('导出PDF失败!')\n      }\n    },\n    handleThemeChange(theme) {\n      this.$emit('theme-change', theme)\n    }\n  },\n  watch: {\n    fontFamily(newVal) {\n      this.$emit('font-change', { family: newVal, size: this.fontSize })\n    },\n    fontSize(newVal) {\n      this.$emit('font-change', { family: this.fontFamily, size: newVal })\n    }\n  }\n}\n</script>\n\n<style scoped>\n.file-menu {\n  position: relative;\n  z-index: 1000;\n}\n\n.menu-toggle {\n  position: fixed;\n  top: 10px;\n  left: 10px;\n  z-index: 1001;\n}\n\n.menu-content {\n  position: fixed;\n  top: 50px;\n  left: 10px;\n  width: 250px;\n  padding: 15px;\n  background: var(--menu-bg);\n  border-radius: 4px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);\n  z-index: 1000;\n}\n\n.menu-content.collapsed {\n  display: none;\n}\n\n.menu-section {\n  margin-bottom: 20px;\n}\n\n.menu-title {\n  margin-bottom: 10px;\n  font-size: 14px;\n  display: flex;\n  align-items: center;\n}\n\n.menu-title i {\n  margin-right: 8px;\n}\n\n/* 暗色模式支持 */\n.app-container.dark .menu-content {\n  background: #2d2d2d;\n  color: #e0e0e0;\n}\n</style>\n"],"mappings":";;AAkDA,SAAAA,YAAA,EAAAC,WAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACAC,YAAA,EAAAC,MAAA;IACAC,eAAA,EAAAD,MAAA;IACAE,cAAA,EAAAF;EACA;EACAG,IAAA,WAAAA,KAAA;IACA;MACAC,MAAA;MACAC,UAAA;MACAC,QAAA;IACA;EACA;EACAC,OAAA;IACAC,UAAA,WAAAA,WAAA;MACA,KAAAJ,MAAA,SAAAA,MAAA;IACA;IACAK,UAAA,WAAAA,WAAA;MACA,KAAAC,KAAA;IACA;IACAC,UAAA,WAAAA,WAAA;MACA,KAAAD,KAAA;IACA;IACAE,gBAAA,WAAAA,iBAAA;MACAjB,YAAA,MAAAO,cAAA;QAAAW,KAAA,OAAAd;MAAA;IACA;IACAe,eAAA,WAAAA,gBAAA;MAAA,IAAAC,KAAA;MAAA,OAAAC,iBAAA,cAAAC,YAAA,GAAAC,CAAA,UAAAC,QAAA;QAAA,IAAAC,EAAA;QAAA,OAAAH,YAAA,GAAAI,CAAA,WAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,CAAA,GAAAD,QAAA,CAAAE,CAAA;YAAA;cAAAF,QAAA,CAAAC,CAAA;cAAAD,QAAA,CAAAE,CAAA;cAAA,OAEA5B,WAAA,CAAAmB,KAAA,CAAAb,cAAA;gBAAAW,KAAA,EAAAE,KAAA,CAAAhB;cAAA;YAAA;cAAAuB,QAAA,CAAAE,CAAA;cAAA;YAAA;cAAAF,QAAA,CAAAC,CAAA;cAAAH,EAAA,GAAAE,QAAA,CAAAG,CAAA;cAEAC,OAAA,CAAAC,KAAA,aAAAP,EAAA;cACAL,KAAA,CAAAa,QAAA,CAAAD,KAAA;YAAA;cAAA,OAAAL,QAAA,CAAAO,CAAA;UAAA;QAAA,GAAAV,OAAA;MAAA;IAEA;IACAW,iBAAA,WAAAA,kBAAAjB,KAAA;MACA,KAAAH,KAAA,iBAAAG,KAAA;IACA;EACA;EACAkB,KAAA;IACA1B,UAAA,WAAAA,WAAA2B,MAAA;MACA,KAAAtB,KAAA;QAAAuB,MAAA,EAAAD,MAAA;QAAAE,IAAA,OAAA5B;MAAA;IACA;IACAA,QAAA,WAAAA,SAAA0B,MAAA;MACA,KAAAtB,KAAA;QAAAuB,MAAA,OAAA5B,UAAA;QAAA6B,IAAA,EAAAF;MAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
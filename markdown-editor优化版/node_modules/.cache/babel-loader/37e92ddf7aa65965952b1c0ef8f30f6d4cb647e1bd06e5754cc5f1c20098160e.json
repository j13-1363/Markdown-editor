{"ast":null,"code":"import \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.every.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.every.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\nimport \"core-js/modules/es.string.ends-with.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.string.starts-with.js\";\nimport \"core-js/modules/es.string.trim-start.js\";\nexport function handleCodeFormat(content, selection) {\n  return handleMultilineFormat(content, selection, '```', '\\n```');\n}\nexport function detectFormats(text) {\n  if (!text) return {};\n  return {\n    bold: text.startsWith('**') && text.endsWith('**'),\n    italic: text.startsWith('_') && text.endsWith('_'),\n    strikethrough: text.startsWith('~~') && text.endsWith('~~'),\n    h1: text.startsWith('# '),\n    h2: text.startsWith('## '),\n    h3: text.startsWith('### '),\n    ul: text.startsWith('- '),\n    ol: /^\\d+\\. /.test(text),\n    code: text.startsWith('`') && text.endsWith('`'),\n    codeblock: text.startsWith('```\\n') && text.endsWith('\\n```'),\n    quote: text.startsWith('> ')\n  };\n}\nfunction isWrappedWith(text, prefix) {\n  var suffix = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : prefix;\n  return text.startsWith(prefix) && text.endsWith(suffix);\n}\nexport function toggleMarkdownFormat(content, selection, prefix, suffix) {\n  var start = selection.start,\n    end = selection.end,\n    text = selection.text;\n  var isFormatted = isWrappedWith(text, prefix, suffix);\n  if (isFormatted) {\n    return removeMarkdownFormat(content, selection, prefix, suffix);\n  } else {\n    return addMarkdownFormat(content, selection, prefix, suffix);\n  }\n}\nexport function addMarkdownFormat(content, selection, prefix, suffix) {\n  var start = selection.start,\n    end = selection.end,\n    text = selection.text;\n  return {\n    content: content.slice(0, start) + prefix + text + suffix + content.slice(end),\n    newStart: start + prefix.length,\n    newEnd: end + prefix.length + suffix.length\n  };\n}\nexport function removeMarkdownFormat(content, selection, prefix, suffix) {\n  var start = selection.start,\n    end = selection.end,\n    text = selection.text;\n  return {\n    content: content.slice(0, start) + text.slice(prefix.length, -suffix.length) + content.slice(end),\n    newStart: start,\n    newEnd: end - prefix.length - suffix.length\n  };\n}\nexport function handleListFormat(content, selection) {\n  var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'ul';\n  var start = selection.start,\n    end = selection.end,\n    text = selection.text;\n  var lines = text.split('\\n');\n  var isAlreadyList = lines.every(function (line) {\n    return type === 'ul' ? line.startsWith('- ') : /^\\d+\\. /.test(line);\n  });\n  if (isAlreadyList) {\n    var newLines = lines.map(function (line) {\n      return line.replace(/^-|\\d+\\.\\s*/, '').trimStart();\n    });\n    var newText = newLines.join('\\n');\n    return {\n      content: content.slice(0, start) + newText + content.slice(end),\n      newStart: start,\n      newEnd: start + newText.length\n    };\n  } else {\n    var _newLines = lines.map(function (line, i) {\n      return type === 'ul' ? \"- \".concat(line) : \"\".concat(i + 1, \". \").concat(line);\n    });\n    var _newText = _newLines.join('\\n');\n    var lengthDiff = _newText.length - text.length;\n    return {\n      content: content.slice(0, start) + _newText + content.slice(end),\n      newStart: start,\n      newEnd: end + lengthDiff\n    };\n  }\n}\nexport function handleTaskList(content, selection) {\n  var start = selection.start,\n    end = selection.end,\n    text = selection.text;\n  var lines = text.split('\\n');\n  var isTaskList = lines.every(function (line) {\n    return /^\\s*- \\[[x ]\\]/.test(line);\n  });\n  if (isTaskList) {\n    var newLines = lines.map(function (line) {\n      return line.replace(/^\\s*- \\[[x ]\\]/, '- [ ]');\n    });\n    var newText = newLines.join('\\n');\n    return {\n      content: content.slice(0, start) + newText + content.slice(end),\n      newStart: start,\n      newEnd: start + newText.length\n    };\n  } else {\n    var _newLines2 = lines.map(function (line) {\n      return \"- [ ] \".concat(line);\n    });\n    var _newText2 = _newLines2.join('\\n');\n    var lengthDiff = _newText2.length - text.length;\n    return {\n      content: content.slice(0, start) + _newText2 + content.slice(end),\n      newStart: start,\n      newEnd: end + lengthDiff\n    };\n  }\n}\nexport function handleMultilineFormat(content, selection, prefix) {\n  var suffix = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '';\n  var start = selection.start,\n    end = selection.end,\n    text = selection.text;\n  var lines = text.split('\\n');\n  var isFormatted = lines.every(function (line) {\n    return line.startsWith(prefix) && (suffix ? line.endsWith(suffix) : true);\n  });\n  if (isFormatted) {\n    var newLines = lines.map(function (line) {\n      return suffix ? line.slice(prefix.length, -suffix.length) : line.slice(prefix.length);\n    });\n    var newText = newLines.join('\\n');\n    return {\n      content: content.slice(0, start) + newText + content.slice(end),\n      newStart: start,\n      newEnd: start + newText.length\n    };\n  } else {\n    var _newLines3 = lines.map(function (line) {\n      return prefix + line + suffix;\n    });\n    var _newText3 = _newLines3.join('\\n');\n    var lengthDiff = _newText3.length - text.length;\n    return {\n      content: content.slice(0, start) + _newText3 + content.slice(end),\n      newStart: start,\n      newEnd: end + lengthDiff\n    };\n  }\n}\nexport var formatHelpers = {\n  bold: function bold(content, selection) {\n    return toggleMarkdownFormat(content, selection, '**', '**');\n  },\n  italic: function italic(content, selection) {\n    return toggleMarkdownFormat(content, selection, '_', '_');\n  },\n  strikethrough: function strikethrough(content, selection) {\n    return toggleMarkdownFormat(content, selection, '~~', '~~');\n  },\n  h1: function h1(content, selection) {\n    return toggleMarkdownFormat(content, selection, '# ', '');\n  },\n  h2: function h2(content, selection) {\n    return toggleMarkdownFormat(content, selection, '## ', '');\n  },\n  h3: function h3(content, selection) {\n    return toggleMarkdownFormat(content, selection, '### ', '');\n  },\n  ul: function ul(content, selection) {\n    return handleListFormat(content, selection, 'ul');\n  },\n  ol: function ol(content, selection) {\n    return handleListFormat(content, selection, 'ol');\n  },\n  taskList: handleTaskList,\n  quote: function quote(content, selection) {\n    return handleMultilineFormat(content, selection, '> ');\n  },\n  code: function code(content, selection) {\n    return toggleMarkdownFormat(content, selection, '`', '`');\n  },\n  codeblock: function codeblock(content, selection) {\n    return handleMultilineFormat(content, selection, '```\\n', '\\n```');\n  },\n  table: function table(content, selection) {\n    var tableTemplate = '| 标题1 | 标题2 |\\n|-------|-------|\\n| 内容1 | 内容2 |';\n    return {\n      content: content.slice(0, selection.start) + tableTemplate + content.slice(selection.end),\n      newStart: selection.start + tableTemplate.length,\n      newEnd: selection.start + tableTemplate.length\n    };\n  },\n  image: function image(content, selection, imagePath) {\n    var markdownImage = \"![\\u56FE\\u7247](\".concat(imagePath, \")\");\n    return {\n      content: content.slice(0, selection.start) + markdownImage + content.slice(selection.end),\n      newStart: selection.start + markdownImage.length,\n      newEnd: selection.start + markdownImage.length\n    };\n  },\n  link: function link(content, selection, linkText, url) {\n    if (selection.text.includes('![图片]')) return {\n      content: content,\n      newStart: selection.start\n    };\n    var markdownLink = \"[\".concat(linkText, \"](\").concat(url, \")\");\n    return {\n      content: content.slice(0, selection.start) + markdownLink + content.slice(selection.end),\n      newStart: selection.start + markdownLink.length,\n      newEnd: selection.start + markdownLink.length\n    };\n  }\n};","map":{"version":3,"names":["handleCodeFormat","content","selection","handleMultilineFormat","detectFormats","text","bold","startsWith","endsWith","italic","strikethrough","h1","h2","h3","ul","ol","test","code","codeblock","quote","isWrappedWith","prefix","suffix","arguments","length","undefined","toggleMarkdownFormat","start","end","isFormatted","removeMarkdownFormat","addMarkdownFormat","slice","newStart","newEnd","handleListFormat","type","lines","split","isAlreadyList","every","line","newLines","map","replace","trimStart","newText","join","i","concat","lengthDiff","handleTaskList","isTaskList","formatHelpers","taskList","table","tableTemplate","image","imagePath","markdownImage","link","linkText","url","includes","markdownLink"],"sources":["D:/作业/markdown-editor优化版/src/lib/formatUtils.js"],"sourcesContent":["export function handleCodeFormat(content, selection) {\n  return handleMultilineFormat(content, selection, '```', '\\n```')\n}\n\nexport function detectFormats(text) {\n  if (!text) return {}\n\n  return {\n    bold: text.startsWith('**') && text.endsWith('**'),\n    italic: text.startsWith('_') && text.endsWith('_'),\n    strikethrough: text.startsWith('~~') && text.endsWith('~~'),\n    h1: text.startsWith('# '),\n    h2: text.startsWith('## '),\n    h3: text.startsWith('### '),\n    ul: text.startsWith('- '),\n    ol: /^\\d+\\. /.test(text),\n    code: text.startsWith('`') && text.endsWith('`'),\n    codeblock: text.startsWith('```\\n') && text.endsWith('\\n```'),\n    quote: text.startsWith('> ')\n  }\n}\n\nfunction isWrappedWith(text, prefix, suffix = prefix) {\n  return text.startsWith(prefix) && text.endsWith(suffix)\n}\n\nexport function toggleMarkdownFormat(content, selection, prefix, suffix) {\n  const { start, end, text } = selection\n  const isFormatted = isWrappedWith(text, prefix, suffix)\n\n  if (isFormatted) {\n    return removeMarkdownFormat(content, selection, prefix, suffix)\n  } else {\n    return addMarkdownFormat(content, selection, prefix, suffix)\n  }\n}\n\nexport function addMarkdownFormat(content, selection, prefix, suffix) {\n  const { start, end, text } = selection\n  return {\n    content: content.slice(0, start) + prefix + text + suffix + content.slice(end),\n    newStart: start + prefix.length,\n    newEnd: end + prefix.length + suffix.length\n  }\n}\n\nexport function removeMarkdownFormat(content, selection, prefix, suffix) {\n  const { start, end, text } = selection\n  return {\n    content: content.slice(0, start) + \n             text.slice(prefix.length, -suffix.length) + \n             content.slice(end),\n    newStart: start,\n    newEnd: end - prefix.length - suffix.length\n  }\n}\n\nexport function handleListFormat(content, selection, type = 'ul') {\n  const { start, end, text } = selection\n  const lines = text.split('\\n')\n\n  const isAlreadyList = lines.every(line => \n    type === 'ul' ? line.startsWith('- ') : /^\\d+\\. /.test(line)\n  )\n\n  if (isAlreadyList) {\n    const newLines = lines.map(line => line.replace(/^-|\\d+\\.\\s*/, '').trimStart())\n    const newText = newLines.join('\\n')\n    return {\n      content: content.slice(0, start) + newText + content.slice(end),\n      newStart: start,\n      newEnd: start + newText.length\n    }\n  } else {\n    const newLines = lines.map((line, i) => \n      type === 'ul' ? `- ${line}` : `${i + 1}. ${line}`\n    )\n    const newText = newLines.join('\\n')\n    const lengthDiff = newText.length - text.length\n    return {\n      content: content.slice(0, start) + newText + content.slice(end),\n      newStart: start,\n      newEnd: end + lengthDiff\n    }\n  }\n}\n\nexport function handleTaskList(content, selection) {\n  const { start, end, text } = selection\n  const lines = text.split('\\n')\n\n  const isTaskList = lines.every(line => /^\\s*- \\[[x ]\\]/.test(line))\n\n  if (isTaskList) {\n    const newLines = lines.map(line => line.replace(/^\\s*- \\[[x ]\\]/, '- [ ]'))\n    const newText = newLines.join('\\n')\n    return {\n      content: content.slice(0, start) + newText + content.slice(end),\n      newStart: start,\n      newEnd: start + newText.length\n    }\n  } else {\n    const newLines = lines.map(line => `- [ ] ${line}`)\n    const newText = newLines.join('\\n')\n    const lengthDiff = newText.length - text.length\n    return {\n      content: content.slice(0, start) + newText + content.slice(end),\n      newStart: start,\n      newEnd: end + lengthDiff\n    }\n  }\n}\n\nexport function handleMultilineFormat(content, selection, prefix, suffix = '') {\n  const { start, end, text } = selection\n  const lines = text.split('\\n')\n\n  const isFormatted = lines.every(line => \n    line.startsWith(prefix) && (suffix ? line.endsWith(suffix) : true)\n  )\n\n  if (isFormatted) {\n    const newLines = lines.map(line => \n      suffix \n        ? line.slice(prefix.length, -suffix.length) \n        : line.slice(prefix.length)\n    )\n    const newText = newLines.join('\\n')\n    return {\n      content: content.slice(0, start) + newText + content.slice(end),\n      newStart: start,\n      newEnd: start + newText.length\n    }\n  } else {\n    const newLines = lines.map(line => prefix + line + suffix)\n    const newText = newLines.join('\\n')\n    const lengthDiff = newText.length - text.length\n    return {\n      content: content.slice(0, start) + newText + content.slice(end),\n      newStart: start,\n      newEnd: end + lengthDiff\n    }\n  }\n}\n\nexport const formatHelpers = {\n  bold: (content, selection) => toggleMarkdownFormat(content, selection, '**', '**'),\n  italic: (content, selection) => toggleMarkdownFormat(content, selection, '_', '_'),\n  strikethrough: (content, selection) => toggleMarkdownFormat(content, selection, '~~', '~~'),\n  h1: (content, selection) => toggleMarkdownFormat(content, selection, '# ', ''),\n  h2: (content, selection) => toggleMarkdownFormat(content, selection, '## ', ''),\n  h3: (content, selection) => toggleMarkdownFormat(content, selection, '### ', ''),\n  ul: (content, selection) => handleListFormat(content, selection, 'ul'),\n  ol: (content, selection) => handleListFormat(content, selection, 'ol'),\n  taskList: handleTaskList,\n  quote: (content, selection) => handleMultilineFormat(content, selection, '> '),\n  code: (content, selection) => toggleMarkdownFormat(content, selection, '`', '`'),\n  codeblock: (content, selection) => handleMultilineFormat(content, selection, '```\\n', '\\n```'),\n  table: (content, selection) => {\n    const tableTemplate = '| 标题1 | 标题2 |\\n|-------|-------|\\n| 内容1 | 内容2 |'\n    return {\n      content: content.slice(0, selection.start) + tableTemplate + content.slice(selection.end),\n      newStart: selection.start + tableTemplate.length,\n      newEnd: selection.start + tableTemplate.length\n    }\n  },\n  image: (content, selection, imagePath) => {\n    const markdownImage = `![图片](${imagePath})`\n    return {\n      content: content.slice(0, selection.start) + markdownImage + content.slice(selection.end),\n      newStart: selection.start + markdownImage.length,\n      newEnd: selection.start + markdownImage.length\n    }\n  },\n  link: (content, selection, linkText, url) => {\n    if (selection.text.includes('![图片]')) return { content, newStart: selection.start }\n    const markdownLink = `[${linkText}](${url})`\n    return {\n      content: content.slice(0, selection.start) + markdownLink + content.slice(selection.end),\n      newStart: selection.start + markdownLink.length,\n      newEnd: selection.start + markdownLink.length\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
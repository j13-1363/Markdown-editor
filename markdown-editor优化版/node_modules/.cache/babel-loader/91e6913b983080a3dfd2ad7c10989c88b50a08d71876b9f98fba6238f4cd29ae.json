{"ast":null,"code":"import \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.every.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.every.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.constructor.js\";\nimport \"core-js/modules/es.regexp.dot-all.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.sticky.js\";\nimport \"core-js/modules/es.regexp.test.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.string.ends-with.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.string.match.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.string.starts-with.js\";\nimport \"core-js/modules/es.string.trim.js\";\n// 增强的格式检测\nexport function detectFormats(text) {\n  if (!text || typeof text !== 'string') return {};\n\n  // 检测多行格式\n  var lines = text.split('\\n');\n  var isMultiline = lines.length > 1;\n  return {\n    bold: /^\\*\\*.+\\*\\*$/.test(text),\n    italic: /^_.+_$/.test(text),\n    strikethrough: /^~~.+~~$/.test(text),\n    h1: /^#\\s.+$/.test(text),\n    h2: /^##\\s.+$/.test(text),\n    h3: /^###\\s.+$/.test(text),\n    ul: lines.every(function (line) {\n      return /^\\s*[-*+]\\s.+$/.test(line);\n    }),\n    ol: lines.every(function (line) {\n      return /^\\s*\\d+\\.\\s.+$/.test(line);\n    }),\n    taskList: lines.every(function (line) {\n      return /^\\s*[-*+]\\s\\[[ xX]\\]\\s.+$/.test(line);\n    }),\n    code: /^`.+`$/.test(text),\n    codeblock: /^```[^\\n]*\\n[\\s\\S]*?\\n```$/.test(text),\n    quote: lines.every(function (line) {\n      return /^\\s*>/.test(line);\n    })\n  };\n}\n\n// 更严格的格式包裹检测\nfunction isWrappedWith(text, prefix) {\n  var suffix = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : prefix;\n  if (!text || !prefix) return false;\n  return text.startsWith(prefix) && text.endsWith(suffix) && text.length > prefix.length + suffix.length;\n}\n\n// 改进的格式切换\nexport function toggleMarkdownFormat(content, selection, prefix, suffix) {\n  var start = selection.start,\n    end = selection.end,\n    text = selection.text;\n\n  // 严格检测是否已应用格式\n  var isFormatted = isWrappedWith(text, prefix, suffix);\n  if (isFormatted) {\n    return removeMarkdownFormat(content, selection, prefix, suffix);\n  } else {\n    // 确保不会重复添加格式\n    if (text.startsWith(prefix) || text.endsWith(suffix)) {\n      return {\n        content: content,\n        newStart: start,\n        newEnd: end\n      };\n    }\n    return addMarkdownFormat(content, selection, prefix, suffix);\n  }\n}\n\n// 改进的格式添加\nexport function addMarkdownFormat(content, selection, prefix, suffix) {\n  var start = selection.start,\n    end = selection.end,\n    text = selection.text;\n\n  // 处理多行内容\n  if (text.includes('\\n')) {\n    var lines = text.split('\\n');\n    var formattedLines = lines.map(function (line) {\n      return prefix + line + suffix;\n    });\n    var newText = formattedLines.join('\\n');\n    return {\n      content: content.slice(0, start) + newText + content.slice(end),\n      newStart: start,\n      newEnd: start + newText.length\n    };\n  }\n  return {\n    content: content.slice(0, start) + prefix + text + suffix + content.slice(end),\n    newStart: start + prefix.length,\n    newEnd: end + prefix.length + suffix.length\n  };\n}\n\n// 改进的格式移除\nexport function removeMarkdownFormat(content, selection, prefix, suffix) {\n  var start = selection.start,\n    end = selection.end,\n    text = selection.text;\n\n  // 处理多行内容\n  if (text.includes('\\n')) {\n    var lines = text.split('\\n');\n    var unformattedLines = lines.map(function (line) {\n      var result = line;\n      if (line.startsWith(prefix)) result = result.slice(prefix.length);\n      if (suffix && line.endsWith(suffix)) {\n        result = result.slice(0, result.length - suffix.length);\n      }\n      return result;\n    });\n    var newText = unformattedLines.join('\\n');\n    return {\n      content: content.slice(0, start) + newText + content.slice(end),\n      newStart: start,\n      newEnd: start + newText.length\n    };\n  }\n  return {\n    content: content.slice(0, start) + text.slice(prefix.length, suffix ? -suffix.length : undefined) + content.slice(end),\n    newStart: start,\n    newEnd: end - prefix.length - (suffix ? suffix.length : 0)\n  };\n}\n\n// 改进的多行格式处理\nexport function handleMultilineFormat(content, selection, prefix) {\n  var suffix = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '';\n  var start = selection.start,\n    end = selection.end,\n    text = selection.text;\n  var lines = text.split('\\n');\n\n  // 增强的格式检测\n  var isFormatted = lines.every(function (line) {\n    var trimmed = line.trim();\n    return (trimmed.startsWith(prefix) || line.startsWith(prefix)) && (suffix ? trimmed.endsWith(suffix) || line.endsWith(suffix) : true);\n  });\n  if (isFormatted) {\n    // 移除格式\n    var newLines = lines.map(function (line) {\n      var result = line;\n      // 处理前缀\n      if (line.trim().startsWith(prefix)) {\n        result = result.replace(prefix, '');\n      } else if (line.startsWith(prefix)) {\n        result = result.replace(new RegExp(\"^\".concat(escapeRegExp(prefix))), '');\n      }\n      // 处理后缀\n      if (suffix) {\n        if (line.trim().endsWith(suffix)) {\n          result = result.replace(new RegExp(\"\".concat(escapeRegExp(suffix), \"$\")), '');\n        } else if (line.endsWith(suffix)) {\n          result = result.replace(new RegExp(\"\".concat(escapeRegExp(suffix), \"$\")), '');\n        }\n      }\n      return result;\n    });\n    var newText = newLines.join('\\n');\n    return {\n      content: content.slice(0, start) + newText + content.slice(end),\n      newStart: start,\n      newEnd: start + newText.length\n    };\n  } else {\n    // 添加格式\n    var _newLines = lines.map(function (line) {\n      var indent = line.match(/^\\s*/)[0];\n      return indent + prefix + line.trim() + suffix;\n    });\n    var _newText = _newLines.join('\\n');\n    var lengthDiff = _newText.length - text.length;\n    return {\n      content: content.slice(0, start) + _newText + content.slice(end),\n      newStart: start,\n      newEnd: end + lengthDiff\n    };\n  }\n}\n\n// 辅助函数：转义正则特殊字符\nfunction escapeRegExp(string) {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\n\n// 更新后的格式助手\nexport var formatHelpers = {\n  bold: function bold(content, selection) {\n    return toggleMarkdownFormat(content, selection, '**', '**');\n  },\n  italic: function italic(content, selection) {\n    return toggleMarkdownFormat(content, selection, '_', '_');\n  },\n  strikethrough: function strikethrough(content, selection) {\n    return toggleMarkdownFormat(content, selection, '~~', '~~');\n  },\n  h1: function h1(content, selection) {\n    return toggleMarkdownFormat(content, selection, '# ', '');\n  },\n  h2: function h2(content, selection) {\n    return toggleMarkdownFormat(content, selection, '## ', '');\n  },\n  h3: function h3(content, selection) {\n    return toggleMarkdownFormat(content, selection, '### ', '');\n  },\n  ul: function ul(content, selection) {\n    return handleMultilineFormat(content, selection, '- ');\n  },\n  ol: function ol(content, selection) {\n    return handleMultilineFormat(content, selection, '1. ');\n  },\n  taskList: function taskList(content, selection) {\n    return handleMultilineFormat(content, selection, '- [ ] ');\n  },\n  quote: function quote(content, selection) {\n    return handleMultilineFormat(content, selection, '> ');\n  },\n  code: function code(content, selection) {\n    return toggleMarkdownFormat(content, selection, '`', '`');\n  },\n  codeblock: function codeblock(content, selection) {\n    return handleMultilineFormat(content, selection, '```\\n', '\\n```');\n  },\n  table: function table(content, selection) {\n    var tableTemplate = '| Header 1 | Header 2 |\\n|----------|----------|\\n| Cell 1   | Cell 2   |';\n    return {\n      content: content.slice(0, selection.start) + tableTemplate + content.slice(selection.end),\n      newStart: selection.start + tableTemplate.length,\n      newEnd: selection.start + tableTemplate.length\n    };\n  },\n  image: function image(content, selection, imagePath) {\n    var markdownImage = \"![\\u56FE\\u7247](\".concat(imagePath, \")\");\n    return {\n      content: content.slice(0, selection.start) + markdownImage + content.slice(selection.end),\n      newStart: selection.start + markdownImage.length,\n      newEnd: selection.start + markdownImage.length\n    };\n  },\n  link: function link(content, selection, linkText, url) {\n    if (selection.text.includes('![图片]')) return {\n      content: content,\n      newStart: selection.start\n    };\n    var markdownLink = \"[\".concat(linkText, \"](\").concat(url, \")\");\n    return {\n      content: content.slice(0, selection.start) + markdownLink + content.slice(selection.end),\n      newStart: selection.start + markdownLink.length,\n      newEnd: selection.start + markdownLink.length\n    };\n  }\n};","map":{"version":3,"names":["detectFormats","text","lines","split","isMultiline","length","bold","test","italic","strikethrough","h1","h2","h3","ul","every","line","ol","taskList","code","codeblock","quote","isWrappedWith","prefix","suffix","arguments","undefined","startsWith","endsWith","toggleMarkdownFormat","content","selection","start","end","isFormatted","removeMarkdownFormat","newStart","newEnd","addMarkdownFormat","includes","formattedLines","map","newText","join","slice","unformattedLines","result","handleMultilineFormat","trimmed","trim","newLines","replace","RegExp","concat","escapeRegExp","indent","match","lengthDiff","string","formatHelpers","table","tableTemplate","image","imagePath","markdownImage","link","linkText","url","markdownLink"],"sources":["D:/作业/markdown-editor优化版/src/lib/formatUtils.js"],"sourcesContent":["// 增强的格式检测\nexport function detectFormats(text) {\n  if (!text || typeof text !== 'string') return {}\n  \n  // 检测多行格式\n  const lines = text.split('\\n')\n  const isMultiline = lines.length > 1\n  \n  return {\n    bold: /^\\*\\*.+\\*\\*$/.test(text),\n    italic: /^_.+_$/.test(text),\n    strikethrough: /^~~.+~~$/.test(text),\n    h1: /^#\\s.+$/.test(text),\n    h2: /^##\\s.+$/.test(text),\n    h3: /^###\\s.+$/.test(text),\n    ul: lines.every(line => /^\\s*[-*+]\\s.+$/.test(line)),\n    ol: lines.every(line => /^\\s*\\d+\\.\\s.+$/.test(line)),\n    taskList: lines.every(line => /^\\s*[-*+]\\s\\[[ xX]\\]\\s.+$/.test(line)),\n    code: /^`.+`$/.test(text),\n    codeblock: /^```[^\\n]*\\n[\\s\\S]*?\\n```$/.test(text),\n    quote: lines.every(line => /^\\s*>/.test(line))\n  }\n}\n\n// 更严格的格式包裹检测\nfunction isWrappedWith(text, prefix, suffix = prefix) {\n  if (!text || !prefix) return false\n  return (\n    text.startsWith(prefix) && \n    text.endsWith(suffix) &&\n    text.length > prefix.length + suffix.length\n  )\n}\n\n// 改进的格式切换\nexport function toggleMarkdownFormat(content, selection, prefix, suffix) {\n  const { start, end, text } = selection\n  \n  // 严格检测是否已应用格式\n  const isFormatted = isWrappedWith(text, prefix, suffix)\n  \n  if (isFormatted) {\n    return removeMarkdownFormat(content, selection, prefix, suffix)\n  } else {\n    // 确保不会重复添加格式\n    if (text.startsWith(prefix) || text.endsWith(suffix)) {\n      return { content, newStart: start, newEnd: end }\n    }\n    return addMarkdownFormat(content, selection, prefix, suffix)\n  }\n}\n\n// 改进的格式添加\nexport function addMarkdownFormat(content, selection, prefix, suffix) {\n  const { start, end, text } = selection\n  \n  // 处理多行内容\n  if (text.includes('\\n')) {\n    const lines = text.split('\\n')\n    const formattedLines = lines.map(line => prefix + line + suffix)\n    const newText = formattedLines.join('\\n')\n    \n    return {\n      content: content.slice(0, start) + newText + content.slice(end),\n      newStart: start,\n      newEnd: start + newText.length\n    }\n  }\n  \n  return {\n    content: content.slice(0, start) + prefix + text + suffix + content.slice(end),\n    newStart: start + prefix.length,\n    newEnd: end + prefix.length + suffix.length\n  }\n}\n\n// 改进的格式移除\nexport function removeMarkdownFormat(content, selection, prefix, suffix) {\n  const { start, end, text } = selection\n  \n  // 处理多行内容\n  if (text.includes('\\n')) {\n    const lines = text.split('\\n')\n    const unformattedLines = lines.map(line => {\n      let result = line\n      if (line.startsWith(prefix)) result = result.slice(prefix.length)\n      if (suffix && line.endsWith(suffix)) {\n        result = result.slice(0, result.length - suffix.length)\n      }\n      return result\n    })\n    \n    const newText = unformattedLines.join('\\n')\n    return {\n      content: content.slice(0, start) + newText + content.slice(end),\n      newStart: start,\n      newEnd: start + newText.length\n    }\n  }\n  \n  return {\n    content: content.slice(0, start) + \n             text.slice(prefix.length, suffix ? -suffix.length : undefined) + \n             content.slice(end),\n    newStart: start,\n    newEnd: end - prefix.length - (suffix ? suffix.length : 0)\n  }\n}\n\n// 改进的多行格式处理\nexport function handleMultilineFormat(content, selection, prefix, suffix = '') {\n  const { start, end, text } = selection\n  const lines = text.split('\\n')\n\n  // 增强的格式检测\n  const isFormatted = lines.every(line => {\n    const trimmed = line.trim()\n    return (\n      (trimmed.startsWith(prefix) || line.startsWith(prefix)) && \n      (suffix ? trimmed.endsWith(suffix) || line.endsWith(suffix) : true)\n    )\n  })\n\n  if (isFormatted) {\n    // 移除格式\n    const newLines = lines.map(line => {\n      let result = line\n      // 处理前缀\n      if (line.trim().startsWith(prefix)) {\n        result = result.replace(prefix, '')\n      } else if (line.startsWith(prefix)) {\n        result = result.replace(new RegExp(`^${escapeRegExp(prefix)}`), '')\n      }\n      // 处理后缀\n      if (suffix) {\n        if (line.trim().endsWith(suffix)) {\n          result = result.replace(new RegExp(`${escapeRegExp(suffix)}$`), '')\n        } else if (line.endsWith(suffix)) {\n          result = result.replace(new RegExp(`${escapeRegExp(suffix)}$`), '')\n        }\n      }\n      return result\n    })\n    \n    const newText = newLines.join('\\n')\n    return {\n      content: content.slice(0, start) + newText + content.slice(end),\n      newStart: start,\n      newEnd: start + newText.length\n    }\n  } else {\n    // 添加格式\n    const newLines = lines.map(line => {\n      const indent = line.match(/^\\s*/)[0]\n      return indent + prefix + line.trim() + suffix\n    })\n    \n    const newText = newLines.join('\\n')\n    const lengthDiff = newText.length - text.length\n    return {\n      content: content.slice(0, start) + newText + content.slice(end),\n      newStart: start,\n      newEnd: end + lengthDiff\n    }\n  }\n}\n\n// 辅助函数：转义正则特殊字符\nfunction escapeRegExp(string) {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')\n}\n\n// 更新后的格式助手\nexport const formatHelpers = {\n  bold: (content, selection) => toggleMarkdownFormat(content, selection, '**', '**'),\n  italic: (content, selection) => toggleMarkdownFormat(content, selection, '_', '_'),\n  strikethrough: (content, selection) => toggleMarkdownFormat(content, selection, '~~', '~~'),\n  h1: (content, selection) => toggleMarkdownFormat(content, selection, '# ', ''),\n  h2: (content, selection) => toggleMarkdownFormat(content, selection, '## ', ''),\n  h3: (content, selection) => toggleMarkdownFormat(content, selection, '### ', ''),\n  ul: (content, selection) => handleMultilineFormat(content, selection, '- '),\n  ol: (content, selection) => handleMultilineFormat(content, selection, '1. '),\n  taskList: (content, selection) => handleMultilineFormat(content, selection, '- [ ] '),\n  quote: (content, selection) => handleMultilineFormat(content, selection, '> '),\n  code: (content, selection) => toggleMarkdownFormat(content, selection, '`', '`'),\n  codeblock: (content, selection) => handleMultilineFormat(content, selection, '```\\n', '\\n```'),\n  table: (content, selection) => {\n    const tableTemplate = '| Header 1 | Header 2 |\\n|----------|----------|\\n| Cell 1   | Cell 2   |'\n    return {\n      content: content.slice(0, selection.start) + tableTemplate + content.slice(selection.end),\n      newStart: selection.start + tableTemplate.length,\n      newEnd: selection.start + tableTemplate.length\n    }\n  },\n  image: (content, selection, imagePath) => {\n    const markdownImage = `![图片](${imagePath})`\n    return {\n      content: content.slice(0, selection.start) + markdownImage + content.slice(selection.end),\n      newStart: selection.start + markdownImage.length,\n      newEnd: selection.start + markdownImage.length\n    }\n  },\n  link: (content, selection, linkText, url) => {\n    if (selection.text.includes('![图片]')) return { content, newStart: selection.start }\n    const markdownLink = `[${linkText}](${url})`\n    return {\n      content: content.slice(0, selection.start) + markdownLink + content.slice(selection.end),\n      newStart: selection.start + markdownLink.length,\n      newEnd: selection.start + markdownLink.length\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
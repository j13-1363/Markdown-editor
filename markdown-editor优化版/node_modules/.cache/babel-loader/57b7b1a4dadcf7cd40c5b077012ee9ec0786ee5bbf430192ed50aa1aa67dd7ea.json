{"ast":null,"code":"import \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.string.starts-with.js\";\nimport { marked } from 'marked';\nimport hljs from 'highlight.js';\nexport default {\n  data: function data() {\n    return {\n      markdownContent: '## Ê¨¢Ëøé‰ΩøÁî®\\n\\nËøôÊòØ‰∏Ä‰∏™**MarkdownÁºñËæëÂô®**\\n\\n- ÂäüËÉΩ1\\n- ÂäüËÉΩ2\\n\\n`‰ª£Á†ÅÁ§∫‰æã`',\n      previewContent: '',\n      theme: 'light',\n      hasSelection: false,\n      toolbarButtons: [{\n        name: 'Âä†Á≤ó',\n        action: 'bold',\n        requiresSelection: true\n      }, {\n        name: 'Êñú‰Ωì',\n        action: 'italic',\n        requiresSelection: true\n      }, {\n        name: 'H1',\n        action: 'h1',\n        requiresSelection: true\n      }, {\n        name: 'H2',\n        action: 'h2',\n        requiresSelection: true\n      }, {\n        name: 'H3',\n        action: 'h3',\n        requiresSelection: true\n      }, {\n        name: 'Êó†Â∫èÂàóË°®',\n        action: 'ul',\n        requiresSelection: true\n      }, {\n        name: 'ÊúâÂ∫èÂàóË°®',\n        action: 'ol',\n        requiresSelection: true\n      }]\n    };\n  },\n  mounted: function mounted() {\n    marked.setOptions({\n      highlight: function highlight(code) {\n        return hljs.highlightAuto(code).value;\n      }\n    });\n    this.updatePreview();\n  },\n  methods: {\n    updateSelection: function updateSelection() {\n      var editor = this.$refs.editor;\n      this.hasSelection = editor.selectionStart !== editor.selectionEnd;\n    },\n    updatePreview: function updatePreview() {\n      this.previewContent = marked(this.markdownContent);\n    },\n    handleFormat: function handleFormat(type) {\n      var _this = this;\n      var editor = this.$refs.editor;\n      var start = editor.selectionStart;\n      var end = editor.selectionEnd;\n      var text = this.markdownContent.slice(start, end);\n      var formats = {\n        bold: {\n          prefix: '**',\n          suffix: '**'\n        },\n        italic: {\n          prefix: '_',\n          suffix: '_'\n        },\n        h1: {\n          prefix: '# ',\n          suffix: ''\n        },\n        h2: {\n          prefix: '## ',\n          suffix: ''\n        },\n        h3: {\n          prefix: '### ',\n          suffix: ''\n        },\n        ul: {\n          prefix: '- ',\n          suffix: ''\n        },\n        ol: {\n          prefix: '1. ',\n          suffix: ''\n        }\n      };\n      if (formats[type]) {\n        var _formats$type = formats[type],\n          prefix = _formats$type.prefix,\n          suffix = _formats$type.suffix;\n        var newText = text.startsWith(prefix) ? text.slice(prefix.length, suffix.length ? -suffix.length : undefined) : prefix + text + suffix;\n        this.markdownContent = this.markdownContent.slice(0, start) + newText + this.markdownContent.slice(end);\n        this.$nextTick(function () {\n          editor.focus();\n          editor.setSelectionRange(start, start + newText.length);\n          _this.updatePreview();\n        });\n      }\n    },\n    changeTheme: function changeTheme() {\n      this.theme = this.theme === 'light' ? 'dark' : 'light';\n      document.documentElement.setAttribute('data-theme', this.theme);\n    }\n  }\n};","map":{"version":3,"names":["marked","hljs","data","markdownContent","previewContent","theme","hasSelection","toolbarButtons","name","action","requiresSelection","mounted","setOptions","highlight","code","highlightAuto","value","updatePreview","methods","updateSelection","editor","$refs","selectionStart","selectionEnd","handleFormat","type","_this","start","end","text","slice","formats","bold","prefix","suffix","italic","h1","h2","h3","ul","ol","_formats$type","newText","startsWith","length","undefined","$nextTick","focus","setSelectionRange","changeTheme","document","documentElement","setAttribute"],"sources":["src/App.vue"],"sourcesContent":["<template>\n  <div class=\"app-container\">\n    <!-- È°∂ÈÉ®Â∑•ÂÖ∑Ê†è -->\n    <div class=\"toolbar\">\n      <button \n        v-for=\"btn in toolbarButtons\" \n        :key=\"btn.name\"\n        @click=\"handleFormat(btn.action)\"\n        :disabled=\"btn.requiresSelection && !hasSelection\"\n        class=\"tool-btn\"\n      >\n        {{ btn.name }}\n      </button>\n      <button @click=\"changeTheme\" class=\"tool-btn theme-btn\">\n        {{ theme === 'light' ? 'üåô' : '‚òÄÔ∏è' }}\n      </button>\n    </div>\n\n    <!-- ÁºñËæëÂå∫ÂíåÈ¢ÑËßàÂå∫ -->\n    <div class=\"editor-wrapper\">\n      <textarea\n        ref=\"editor\"\n        v-model=\"markdownContent\"\n        @input=\"updatePreview\"\n        @mouseup=\"updateSelection\"\n        class=\"editor\"\n        placeholder=\"Âú®ËøôÈáåËæìÂÖ•MarkdownÂÜÖÂÆπ...\"\n      ></textarea>\n      <div class=\"preview\" v-html=\"previewContent\"></div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { marked } from 'marked'\nimport hljs from 'highlight.js'\n\nexport default {\n  data() {\n    return {\n      markdownContent: '## Ê¨¢Ëøé‰ΩøÁî®\\n\\nËøôÊòØ‰∏Ä‰∏™**MarkdownÁºñËæëÂô®**\\n\\n- ÂäüËÉΩ1\\n- ÂäüËÉΩ2\\n\\n`‰ª£Á†ÅÁ§∫‰æã`',\n      previewContent: '',\n      theme: 'light',\n      hasSelection: false,\n      toolbarButtons: [\n        { name: 'Âä†Á≤ó', action: 'bold', requiresSelection: true },\n        { name: 'Êñú‰Ωì', action: 'italic', requiresSelection: true },\n        { name: 'H1', action: 'h1', requiresSelection: true },\n        { name: 'H2', action: 'h2', requiresSelection: true },\n        { name: 'H3', action: 'h3', requiresSelection: true },\n        { name: 'Êó†Â∫èÂàóË°®', action: 'ul', requiresSelection: true },\n        { name: 'ÊúâÂ∫èÂàóË°®', action: 'ol', requiresSelection: true }\n      ]\n    }\n  },\n  mounted() {\n    marked.setOptions({\n      highlight: (code) => hljs.highlightAuto(code).value\n    })\n    this.updatePreview()\n  },\n  methods: {\n    updateSelection() {\n      const editor = this.$refs.editor\n      this.hasSelection = editor.selectionStart !== editor.selectionEnd\n    },\n    \n    updatePreview() {\n      this.previewContent = marked(this.markdownContent)\n    },\n\n    handleFormat(type) {\n      const editor = this.$refs.editor\n      const start = editor.selectionStart\n      const end = editor.selectionEnd\n      const text = this.markdownContent.slice(start, end)\n      \n      const formats = {\n        bold: { prefix: '**', suffix: '**' },\n        italic: { prefix: '_', suffix: '_' },\n        h1: { prefix: '# ', suffix: '' },\n        h2: { prefix: '## ', suffix: '' },\n        h3: { prefix: '### ', suffix: '' },\n        ul: { prefix: '- ', suffix: '' },\n        ol: { prefix: '1. ', suffix: '' }\n      }\n\n      if (formats[type]) {\n        const { prefix, suffix } = formats[type]\n        const newText = text.startsWith(prefix) ? \n          text.slice(prefix.length, suffix.length ? -suffix.length : undefined) : \n          prefix + text + suffix\n        \n        this.markdownContent = \n          this.markdownContent.slice(0, start) + \n          newText + \n          this.markdownContent.slice(end)\n        \n        this.$nextTick(() => {\n          editor.focus()\n          editor.setSelectionRange(start, start + newText.length)\n          this.updatePreview()\n        })\n      }\n    },\n\n    changeTheme() {\n      this.theme = this.theme === 'light' ? 'dark' : 'light'\n      document.documentElement.setAttribute('data-theme', this.theme)\n    }\n  }\n}\n</script>\n\n<style>\n/* Âü∫Á°ÄÈáçÁΩÆ */\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n/* ÂÖ®Â±Ä‰∏ªÈ¢òÂèòÈáè */\n:root {\n  --bg-color: #ffffff;\n  --text-color: #333333;\n  --border-color: #e0e0e0;\n  --toolbar-bg: #f5f5f5;\n  --tool-btn-bg: #ffffff;\n  --tool-btn-hover: #eaeaea;\n}\n\n[data-theme=\"dark\"] {\n  --bg-color: #1e1e1e;\n  --text-color: #e0e0e0;\n  --border-color: #444444;\n  --toolbar-bg: #2d2d2d;\n  --tool-btn-bg: #3d3d3d;\n  --tool-btn-hover: #4d4d4d;\n}\n\n/* Â∫îÁî®ÂÆπÂô® */\n.app-container {\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  background-color: var(--bg-color);\n  color: var(--text-color);\n}\n\n/* Â∑•ÂÖ∑Ê†èÊ†∑Âºè */\n.toolbar {\n  padding: 10px 15px;\n  background-color: var(--toolbar-bg);\n  border-bottom: 1px solid var(--border-color);\n  display: flex;\n  gap: 8px;\n  flex-wrap: wrap;\n}\n\n.tool-btn {\n  padding: 8px 12px;\n  background-color: var(--tool-btn-bg);\n  border: 1px solid var(--border-color);\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 14px;\n  transition: all 0.2s;\n}\n\n.tool-btn:hover {\n  background-color: var(--tool-btn-hover);\n}\n\n.tool-btn:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n.theme-btn {\n  margin-left: auto;\n  font-size: 16px;\n}\n\n/* ÁºñËæëÂô®Âå∫Âüü */\n.editor-wrapper {\n  display: flex;\n  flex: 1;\n  overflow: hidden;\n}\n\n.editor, .preview {\n  flex: 1;\n  padding: 20px;\n  overflow: auto;\n}\n\n.editor {\n  border-right: 1px solid var(--border-color);\n  resize: none;\n  font-family: 'Consolas', monospace;\n  font-size: 14px;\n  line-height: 1.6;\n  background-color: var(--bg-color);\n  color: var(--text-color);\n}\n\n.preview {\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif;\n  line-height: 1.6;\n}\n\n/* È¢ÑËßàÂå∫ÂüüMarkdownÊ†∑Âºè */\n.preview h1, .preview h2, .preview h3 {\n  margin: 20px 0 10px;\n}\n\n.preview ul, .preview ol {\n  padding-left: 30px;\n  margin: 10px 0;\n}\n\n.preview code {\n  background-color: rgba(175, 184, 193, 0.2);\n  padding: 0.2em 0.4em;\n  border-radius: 3px;\n  font-family: 'Consolas', monospace;\n}\n\n.preview pre {\n  background-color: rgba(175, 184, 193, 0.2);\n  padding: 16px;\n  border-radius: 3px;\n  overflow: auto;\n  margin: 10px 0;\n}\n\n.preview blockquote {\n  border-left: 4px solid #dfe2e5;\n  color: #6a737d;\n  padding: 0 1em;\n  margin: 10px 0;\n}\n</style>\n"],"mappings":";;AAkCA,SAAAA,MAAA;AACA,OAAAC,IAAA;AAEA;EACAC,IAAA,WAAAA,KAAA;IACA;MACAC,eAAA;MACAC,cAAA;MACAC,KAAA;MACAC,YAAA;MACAC,cAAA,GACA;QAAAC,IAAA;QAAAC,MAAA;QAAAC,iBAAA;MAAA,GACA;QAAAF,IAAA;QAAAC,MAAA;QAAAC,iBAAA;MAAA,GACA;QAAAF,IAAA;QAAAC,MAAA;QAAAC,iBAAA;MAAA,GACA;QAAAF,IAAA;QAAAC,MAAA;QAAAC,iBAAA;MAAA,GACA;QAAAF,IAAA;QAAAC,MAAA;QAAAC,iBAAA;MAAA,GACA;QAAAF,IAAA;QAAAC,MAAA;QAAAC,iBAAA;MAAA,GACA;QAAAF,IAAA;QAAAC,MAAA;QAAAC,iBAAA;MAAA;IAEA;EACA;EACAC,OAAA,WAAAA,QAAA;IACAX,MAAA,CAAAY,UAAA;MACAC,SAAA,WAAAA,UAAAC,IAAA;QAAA,OAAAb,IAAA,CAAAc,aAAA,CAAAD,IAAA,EAAAE,KAAA;MAAA;IACA;IACA,KAAAC,aAAA;EACA;EACAC,OAAA;IACAC,eAAA,WAAAA,gBAAA;MACA,IAAAC,MAAA,QAAAC,KAAA,CAAAD,MAAA;MACA,KAAAd,YAAA,GAAAc,MAAA,CAAAE,cAAA,KAAAF,MAAA,CAAAG,YAAA;IACA;IAEAN,aAAA,WAAAA,cAAA;MACA,KAAAb,cAAA,GAAAJ,MAAA,MAAAG,eAAA;IACA;IAEAqB,YAAA,WAAAA,aAAAC,IAAA;MAAA,IAAAC,KAAA;MACA,IAAAN,MAAA,QAAAC,KAAA,CAAAD,MAAA;MACA,IAAAO,KAAA,GAAAP,MAAA,CAAAE,cAAA;MACA,IAAAM,GAAA,GAAAR,MAAA,CAAAG,YAAA;MACA,IAAAM,IAAA,QAAA1B,eAAA,CAAA2B,KAAA,CAAAH,KAAA,EAAAC,GAAA;MAEA,IAAAG,OAAA;QACAC,IAAA;UAAAC,MAAA;UAAAC,MAAA;QAAA;QACAC,MAAA;UAAAF,MAAA;UAAAC,MAAA;QAAA;QACAE,EAAA;UAAAH,MAAA;UAAAC,MAAA;QAAA;QACAG,EAAA;UAAAJ,MAAA;UAAAC,MAAA;QAAA;QACAI,EAAA;UAAAL,MAAA;UAAAC,MAAA;QAAA;QACAK,EAAA;UAAAN,MAAA;UAAAC,MAAA;QAAA;QACAM,EAAA;UAAAP,MAAA;UAAAC,MAAA;QAAA;MACA;MAEA,IAAAH,OAAA,CAAAN,IAAA;QACA,IAAAgB,aAAA,GAAAV,OAAA,CAAAN,IAAA;UAAAQ,MAAA,GAAAQ,aAAA,CAAAR,MAAA;UAAAC,MAAA,GAAAO,aAAA,CAAAP,MAAA;QACA,IAAAQ,OAAA,GAAAb,IAAA,CAAAc,UAAA,CAAAV,MAAA,IACAJ,IAAA,CAAAC,KAAA,CAAAG,MAAA,CAAAW,MAAA,EAAAV,MAAA,CAAAU,MAAA,IAAAV,MAAA,CAAAU,MAAA,GAAAC,SAAA,IACAZ,MAAA,GAAAJ,IAAA,GAAAK,MAAA;QAEA,KAAA/B,eAAA,GACA,KAAAA,eAAA,CAAA2B,KAAA,IAAAH,KAAA,IACAe,OAAA,GACA,KAAAvC,eAAA,CAAA2B,KAAA,CAAAF,GAAA;QAEA,KAAAkB,SAAA;UACA1B,MAAA,CAAA2B,KAAA;UACA3B,MAAA,CAAA4B,iBAAA,CAAArB,KAAA,EAAAA,KAAA,GAAAe,OAAA,CAAAE,MAAA;UACAlB,KAAA,CAAAT,aAAA;QACA;MACA;IACA;IAEAgC,WAAA,WAAAA,YAAA;MACA,KAAA5C,KAAA,QAAAA,KAAA;MACA6C,QAAA,CAAAC,eAAA,CAAAC,YAAA,oBAAA/C,KAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
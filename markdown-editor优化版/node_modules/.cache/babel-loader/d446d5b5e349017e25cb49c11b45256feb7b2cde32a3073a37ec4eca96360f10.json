{"ast":null,"code":"import _regenerator from \"D:/\\u4F5C\\u4E1A/markdown-editor\\u4F18\\u5316\\u7248/node_modules/@babel/runtime/helpers/esm/regenerator.js\";\nimport _asyncToGenerator from \"D:/\\u4F5C\\u4E1A/markdown-editor\\u4F18\\u5316\\u7248/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.string.repeat.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.string.trim.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.url.js\";\nimport \"core-js/modules/web.url.to-json.js\";\nimport \"core-js/modules/web.url-search-params.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport { marked } from 'marked';\nimport hljs from 'highlight.js';\nimport { exportAsHTML as _exportAsHTML, exportAsPDF as _exportAsPDF } from './lib/exportUtils.js';\nimport { formatHelpers } from './lib/formatUtils.js';\nexport default {\n  data: function data() {\n    return {\n      markdownContent: '',\n      previewContent: '',\n      theme: '极昼',\n      fontFamily: \"'Courier New', monospace\",\n      fontSize: '14px',\n      hasSelection: false,\n      showFileMenu: false,\n      toolbarButtons: [{\n        name: '加粗',\n        action: 'bold',\n        requiresSelection: true\n      }, {\n        name: '斜体',\n        action: 'italic',\n        requiresSelection: true\n      }, {\n        name: '删除线',\n        action: 'strikethrough',\n        requiresSelection: true\n      }, {\n        name: 'H1',\n        action: 'h1',\n        requiresSelection: true\n      }, {\n        name: 'H2',\n        action: 'h2',\n        requiresSelection: true\n      }, {\n        name: 'H3',\n        action: 'h3',\n        requiresSelection: true\n      }, {\n        name: '无序列表',\n        action: 'ul',\n        requiresSelection: true\n      }, {\n        name: '有序列表',\n        action: 'ol',\n        requiresSelection: true\n      }, {\n        name: '任务列表',\n        action: 'taskList',\n        requiresSelection: true\n      }, {\n        name: '引用',\n        action: 'quote',\n        requiresSelection: true\n      }, {\n        name: '行内代码',\n        action: 'code',\n        requiresSelection: true\n      }, {\n        name: '代码块',\n        action: 'codeblock',\n        requiresSelection: true\n      }, {\n        name: '表格',\n        action: 'table',\n        requiresSelection: true\n      }, {\n        name: '插入图片',\n        action: 'image',\n        requiresSelection: false\n      }, {\n        name: '插入链接',\n        action: 'link',\n        requiresSelection: false\n      }]\n    };\n  },\n  mounted: function mounted() {\n    marked.setOptions({\n      renderer: new marked.Renderer(),\n      highlight: function highlight(code) {\n        return hljs.highlightAuto(code).value;\n      },\n      breaks: true,\n      sanitize: false // 允许渲染图片\n    });\n    this.updatePreview();\n    document.addEventListener('click', this.closeFileMenu);\n  },\n  beforeDestroy: function beforeDestroy() {\n    document.removeEventListener('click', this.closeFileMenu);\n  },\n  methods: {\n    updatePreview: function updatePreview() {\n      this.previewContent = marked.parse(this.getMarkdownContent());\n    },\n    updateSelection: function updateSelection() {\n      var selection = window.getSelection();\n      this.hasSelection = selection.rangeCount > 0 && selection.toString().trim() !== '';\n    },\n    handleFormat: function handleFormat(type) {\n      var _this = this;\n      var selection = this.getSelectionRange();\n      var content = this.getMarkdownContent();\n      if (type === 'image') {\n        this.handleImageSelect();\n        return;\n      }\n      if (type === 'link') {\n        this.insertLink(selection);\n        return;\n      }\n      var result = formatHelpers[type](content, selection);\n      this.setMarkdownContent(result.content);\n      this.$refs.editor.focus();\n\n      // 精确恢复选区位置\n      this.$nextTick(function () {\n        var newRange = document.createRange();\n        newRange.setStart(_this.$refs.editor.firstChild, result.newStart);\n        newRange.setEnd(_this.$refs.editor.firstChild, result.newEnd);\n        var sel = window.getSelection();\n        sel.removeAllRanges();\n        sel.addRange(newRange);\n      });\n      this.updatePreview();\n    },\n    handleKeydown: function handleKeydown(e) {\n      if (e.ctrlKey || e.metaKey) {\n        var key = e.key.toLowerCase();\n        var customShortcuts = ['b', 'i', 'd', 'q', 'k', 'l', 'o', 't'];\n        if (customShortcuts.includes(key)) {\n          if (key === 'b') this.handleFormat('bold');\n          if (key === 'i') this.handleFormat('italic');\n          if (key === 'd') this.handleFormat('strikethrough');\n          if (key === 'q') this.handleFormat('quote');\n          if (key === 'k') this.handleFormat('link');\n          if (key === 'l') this.handleFormat('ul');\n          if (key === 'o') this.handleFormat('ol');\n          if (key === 't') this.handleFormat('taskList');\n          e.preventDefault();\n        }\n      }\n    },\n    handlePaste: function handlePaste(event) {\n      event.preventDefault();\n      var text = event.clipboardData.getData('text/plain');\n      var selection = this.getSelectionRange();\n      var content = this.getMarkdownContent();\n      var newContent = content.slice(0, selection.start) + text + content.slice(selection.end);\n\n      // 计算新光标位置\n      var newSelection = {\n        start: selection.start + text.length,\n        end: selection.start + text.length\n      };\n      this.setMarkdownContent(newContent, newSelection);\n      this.updatePreview();\n    },\n    getSelectionRange: function getSelectionRange() {\n      var selection = window.getSelection();\n      if (!selection.rangeCount) return {\n        start: 0,\n        end: 0,\n        text: ''\n      };\n      var editor = this.$refs.editor;\n      var range = selection.getRangeAt(0);\n      var preRange = document.createRange();\n      preRange.selectNodeContents(editor);\n      preRange.setEnd(range.startContainer, range.startOffset);\n      var start = preRange.toString().length;\n      preRange.setEnd(range.endContainer, range.endOffset);\n      var end = preRange.toString().length;\n      return {\n        start: start,\n        end: end,\n        text: range.toString()\n      };\n    },\n    getMarkdownContent: function getMarkdownContent() {\n      var editor = this.$refs.editor;\n      var markdown = '';\n      var _walk = function walk(node) {\n        if (node.nodeType === Node.TEXT_NODE) {\n          markdown += node.textContent;\n        } else if (node.nodeType === Node.ELEMENT_NODE) {\n          if (node.tagName === 'IMG') {\n            markdown += \"![\".concat(node.alt || '图片', \"](\").concat(node.src, \")\");\n          } else if (node.tagName === 'BR') {\n            markdown += '\\n';\n          } else if (node.tagName === 'TABLE') {\n            var tableMarkdown = '';\n            Array.from(node.rows).forEach(function (row, rowIndex) {\n              var cells = Array.from(row.cells).map(function (cell) {\n                return cell.textContent.trim();\n              });\n              if (rowIndex === 0) {\n                tableMarkdown += '|' + cells.join(' | ') + '|\\n';\n                tableMarkdown += '|' + cells.map(function (cell) {\n                  return '-'.repeat(cell.length);\n                }).join(' | ') + '|\\n';\n              } else {\n                tableMarkdown += '|' + cells.join(' | ') + '|\\n';\n              }\n            });\n            markdown += tableMarkdown;\n          } else {\n            Array.from(node.childNodes).forEach(function (childNode) {\n              return _walk(childNode);\n            });\n          }\n        }\n      };\n      _walk(editor);\n      return markdown;\n    },\n    setMarkdownContent: function setMarkdownContent(content) {\n      var _this2 = this;\n      var newSelection = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      var selection = window.getSelection();\n      var hadSelection = selection.rangeCount > 0;\n      var savedRange = null;\n      if (hadSelection) {\n        savedRange = selection.getRangeAt(0).cloneRange();\n      }\n\n      // 修复空行问题：只处理图片，不处理换行\n      this.$refs.editor.innerHTML = content.replace(/\\!\\[.*?\\]\\((.*?)\\)/g, function (match, url) {\n        return \"<img src=\\\"\".concat(url, \"\\\" alt=\\\"\\u56FE\\u7247\\\" class=\\\"editor-image\\\">\");\n      });\n\n      // 优先使用传入的新选区\n      if (newSelection) {\n        this.$nextTick(function () {\n          var newRange = document.createRange();\n          newRange.setStart(_this2.$refs.editor.firstChild, newSelection.start);\n          newRange.setEnd(_this2.$refs.editor.firstChild, newSelection.end);\n          var sel = window.getSelection();\n          sel.removeAllRanges();\n          sel.addRange(newRange);\n        });\n      } else if (hadSelection && savedRange) {\n        this.$nextTick(function () {\n          var newRange = document.createRange();\n          newRange.setStart(_this2.$refs.editor.firstChild, savedRange.startOffset);\n          newRange.setEnd(_this2.$refs.editor.firstChild, savedRange.endOffset);\n          var sel = window.getSelection();\n          sel.removeAllRanges();\n          sel.addRange(newRange);\n        });\n      }\n      this.updatePreview();\n    },\n    handleImageSelect: function handleImageSelect() {\n      this.$refs.imageInput.click();\n    },\n    handleImageUpload: function handleImageUpload(event) {\n      var _this3 = this;\n      var file = event.target.files[0];\n      if (!file) return;\n      var reader = new FileReader();\n      reader.onload = function (e) {\n        var base64 = e.target.result;\n        var selection = _this3.getSelectionRange();\n        var markdownImage = \"![\\u56FE\\u7247](\".concat(base64, \")\");\n        var currentContent = _this3.getMarkdownContent();\n        var newContent = currentContent.slice(0, selection.start) + markdownImage + currentContent.slice(selection.end);\n\n        // 计算新光标位置\n        var newSelection = {\n          start: selection.start + markdownImage.length,\n          end: selection.start + markdownImage.length\n        };\n        _this3.setMarkdownContent(newContent, newSelection);\n      };\n      reader.readAsDataURL(file);\n    },\n    insertLink: function insertLink(selection) {\n      var linkText = prompt('输入链接文本:', selection.text) || selection.text;\n      var url = prompt('输入链接地址:');\n      if (!url) return;\n      if (selection.text.includes('![图片]')) {\n        alert('图片区域无法插入链接');\n        return;\n      }\n      var markdownLink = \"[\".concat(linkText, \"](\").concat(url, \")\");\n      var content = this.getMarkdownContent();\n      var newContent = content.slice(0, selection.start) + markdownLink + content.slice(selection.end);\n\n      // 计算新光标位置\n      var newSelection = {\n        start: selection.start + markdownLink.length,\n        end: selection.start + markdownLink.length\n      };\n      this.setMarkdownContent(newContent, newSelection);\n    },\n    toggleFileMenu: function toggleFileMenu() {\n      this.showFileMenu = !this.showFileMenu;\n    },\n    closeFileMenu: function closeFileMenu(event) {\n      if (this.$refs.fileMenu && !this.$refs.fileMenu.contains(event.target)) {\n        this.showFileMenu = false;\n      }\n    },\n    handleMenuClick: function handleMenuClick(action) {\n      this.showFileMenu = false;\n      switch (action) {\n        case 'save':\n          this.saveFile();\n          break;\n        case 'load':\n          this.loadFile();\n          break;\n        case 'exportHTML':\n          this.exportAsHTML();\n          break;\n        case 'exportPDF':\n          this.exportAsPDF();\n          break;\n      }\n    },\n    changeTheme: function changeTheme() {\n      this.theme = this.theme === '极昼' ? '极夜' : '极昼';\n      document.documentElement.setAttribute('data-theme', this.theme);\n    },\n    saveFile: function saveFile() {\n      var blob = new Blob([this.getMarkdownContent()], {\n        type: 'text/markdown'\n      });\n      var link = document.createElement('a');\n      link.href = URL.createObjectURL(blob);\n      link.download = 'document.md';\n      link.click();\n    },\n    loadFile: function loadFile() {\n      var _this4 = this;\n      var input = document.createElement('input');\n      input.type = 'file';\n      input.accept = '.md,.markdown';\n      input.onchange = function (e) {\n        var file = e.target.files[0];\n        var reader = new FileReader();\n        reader.onload = function () {\n          _this4.setMarkdownContent(reader.result);\n        };\n        reader.readAsText(file);\n      };\n      input.click();\n    },\n    exportAsHTML: function exportAsHTML() {\n      _exportAsHTML(this.previewContent, 'markdown_export', {\n        theme: this.theme\n      });\n    },\n    exportAsPDF: function exportAsPDF() {\n      var _this5 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee() {\n        var _t;\n        return _regenerator().w(function (_context) {\n          while (1) switch (_context.p = _context.n) {\n            case 0:\n              _context.p = 0;\n              _context.n = 1;\n              return _exportAsPDF(_this5.previewContent, 'markdown_export', {\n                theme: _this5.theme\n              });\n            case 1:\n              _context.n = 3;\n              break;\n            case 2:\n              _context.p = 2;\n              _t = _context.v;\n              console.error('导出PDF失败:', _t);\n              alert('导出PDF失败，请重试');\n            case 3:\n              return _context.a(2);\n          }\n        }, _callee, null, [[0, 2]]);\n      }))();\n    }\n  }\n};","map":{"version":3,"names":["marked","hljs","exportAsHTML","exportAsPDF","formatHelpers","data","markdownContent","previewContent","theme","fontFamily","fontSize","hasSelection","showFileMenu","toolbarButtons","name","action","requiresSelection","mounted","setOptions","renderer","Renderer","highlight","code","highlightAuto","value","breaks","sanitize","updatePreview","document","addEventListener","closeFileMenu","beforeDestroy","removeEventListener","methods","parse","getMarkdownContent","updateSelection","selection","window","getSelection","rangeCount","toString","trim","handleFormat","type","_this","getSelectionRange","content","handleImageSelect","insertLink","result","setMarkdownContent","$refs","editor","focus","$nextTick","newRange","createRange","setStart","firstChild","newStart","setEnd","newEnd","sel","removeAllRanges","addRange","handleKeydown","e","ctrlKey","metaKey","key","toLowerCase","customShortcuts","includes","preventDefault","handlePaste","event","text","clipboardData","getData","newContent","slice","start","end","newSelection","length","range","getRangeAt","preRange","selectNodeContents","startContainer","startOffset","endContainer","endOffset","markdown","walk","node","nodeType","Node","TEXT_NODE","textContent","ELEMENT_NODE","tagName","concat","alt","src","tableMarkdown","Array","from","rows","forEach","row","rowIndex","cells","map","cell","join","repeat","childNodes","childNode","_this2","arguments","undefined","hadSelection","savedRange","cloneRange","innerHTML","replace","match","url","imageInput","click","handleImageUpload","_this3","file","target","files","reader","FileReader","onload","base64","markdownImage","currentContent","readAsDataURL","linkText","prompt","alert","markdownLink","toggleFileMenu","fileMenu","contains","handleMenuClick","saveFile","loadFile","changeTheme","documentElement","setAttribute","blob","Blob","link","createElement","href","URL","createObjectURL","download","_this4","input","accept","onchange","readAsText","_this5","_asyncToGenerator","_regenerator","m","_callee","_t","w","_context","p","n","v","console","error","a"],"sources":["src/App.vue"],"sourcesContent":["<template>\n  <div class=\"app-container\" :data-theme=\"theme\">\n    <!-- 顶部工具栏 -->\n    <div class=\"toolbar\">\n      <!-- 文件菜单 -->\n      <div class=\"file-menu-wrapper\" ref=\"fileMenu\">\n        <button \n          class=\"file-menu-btn\" \n          @click.stop=\"toggleFileMenu\"\n          :class=\"{ 'active': showFileMenu }\"\n        >\n          <span>文件 ▼</span>\n        </button>\n        <transition name=\"fade\">\n          <div \n            v-show=\"showFileMenu\" \n            class=\"file-menu-dropdown\"\n            @click.stop\n          >\n            <button @极昼=\"handleMenuClick('save')\">保存</button>\n            <button @click=\"handleMenuClick('load')\">打开</button>\n            <button @click=\"handleMenuClick('exportHTML')\">导出HTML</button>\n            <button @click=\"handleMenuClick('exportPDF')\">导出PDF</button>\n          </div>\n        </transition>\n      </div>\n\n      <!-- 格式按钮 -->\n      <div class=\"format-buttons\">\n        <button \n          v-for=\"btn in toolbarButtons\" \n          :key=\"btn.name\"\n          @click=\"handleFormat(btn.action)\"\n          :disabled=\"btn.requiresSelection && !hasSelection\"\n          class=\"tool-btn\"\n        >\n          {{ btn.name }}\n        </button>\n      </div>\n\n      <!-- 字体设置 -->\n      <div class=\"font-settings\">\n        <select v-model=\"fontFamily\" class=\"font-select\">\n          <option value=\"'Courier New', monospace\">等宽字体</option>\n          <option value=\"Arial, sans-serif\">Arial</option>\n          <option value=\"'Times New Roman', serif\">Times New Roman</option>\n        </select>\n        <select v-model=\"fontSize\" class=\"size-select\">\n          <option value=\"14px\">小</option>\n          <option value=\"16px\">中</option>\n          <option value=\"18px\">大</option>\n        </select>\n        <button @click=\"changeTheme\" class=\"theme-btn\">\n          {{ theme === 'light' ? 'dark' : 'light' }}\n        </button>\n      </div>\n\n      <!-- 隐藏的图片输入 -->\n      <input \n        ref=\"imageInput\" \n        type=\"file\" \n        accept=\"image/*\" \n        @change=\"handleImageUpload\" \n        style=\"display: none;\"\n      />\n    </div>\n\n    <!-- 编辑区和预览区 -->\n    <div class=\"editor-wrapper\">\n      <div \n        ref=\"editor\"\n        class=\"editor\"\n        contenteditable=\"true\"\n        @input=\"updatePreview\"\n        @mouseup=\"updateSelection\"\n        @keydown=\"handleKeydown\"\n        @paste=\"handlePaste\"\n        :style=\"{ fontFamily: fontFamily, fontSize: fontSize }\" \n        placeholder=\"在这里输入Markdown内容...\"\n      ></div>\n      <div class=\"preview\" :style=\"{ fontFamily: fontFamily, fontSize: fontSize }\" v-html=\"previewContent\"></div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { marked } from 'marked'\nimport hljs from 'highlight.js'\nimport { exportAsHTML, exportAsPDF } from './lib/exportUtils.js'\nimport { formatHelpers } from './lib/formatUtils.js'\n\nexport default {\n  data() {\n    return {\n      markdownContent: '',\n      previewContent: '',\n      theme: '极昼',\n      fontFamily: \"'Courier New', monospace\",\n      fontSize: '14px',\n      hasSelection: false,\n      showFileMenu: false,\n      toolbarButtons: [\n        { name: '加粗', action: 'bold', requiresSelection: true },\n        { name: '斜体', action: 'italic', requiresSelection: true },\n        { name: '删除线', action: 'strikethrough', requiresSelection: true },\n        { name: 'H1', action: 'h1', requiresSelection: true },\n        { name: 'H2', action: 'h2', requiresSelection: true },\n        { name: 'H3', action: 'h3', requiresSelection: true },\n        { name: '无序列表', action: 'ul', requiresSelection: true },\n        { name: '有序列表', action: 'ol', requiresSelection: true },\n        { name: '任务列表', action: 'taskList', requiresSelection: true },\n        { name: '引用', action: 'quote', requiresSelection: true },\n        { name: '行内代码', action: 'code', requiresSelection: true },\n        { name: '代码块', action: 'codeblock', requiresSelection: true },\n        { name: '表格', action: 'table', requiresSelection: true },\n        { name: '插入图片', action: 'image', requiresSelection: false },\n        { name: '插入链接', action: 'link', requiresSelection: false }\n      ]\n    }\n  },\n  mounted() {\n    marked.setOptions({\n      renderer: new marked.Renderer(),\n      highlight: (code) => hljs.highlightAuto(code).value,\n      breaks: true,\n      sanitize: false // 允许渲染图片\n    })\n    this.updatePreview()\n    document.addEventListener('click', this.closeFileMenu)\n  },\n  beforeDestroy() {\n    document.removeEventListener('click', this.closeFileMenu)\n  },\n  methods: {\n    updatePreview() {\n      this.previewContent = marked.parse(this.getMarkdownContent())\n    },\n    updateSelection() {\n      const selection = window.getSelection()\n      this.hasSelection = selection.rangeCount > 0 && selection.toString().trim() !== ''\n    },\n    handleFormat(type) {\n      const selection = this.getSelectionRange()\n      const content = this.getMarkdownContent()\n\n      if (type === 'image') {\n        this.handleImageSelect()\n        return\n      }\n      if (type === 'link') {\n        this.insertLink(selection)\n        return\n      }\n\n      const result = formatHelpers[type](content, selection)\n      this.setMarkdownContent(result.content)\n      this.$refs.editor.focus()\n      \n      // 精确恢复选区位置\n      this.$nextTick(() => {\n        const newRange = document.createRange()\n        newRange.setStart(this.$refs.editor.firstChild, result.newStart)\n        newRange.setEnd(this.$refs.editor.firstChild, result.newEnd)\n        const sel = window.getSelection()\n        sel.removeAllRanges()\n        sel.addRange(newRange)\n      })\n      \n      this.updatePreview()\n    },\n    handleKeydown(e) {\n      if (e.ctrlKey || e.metaKey) {\n        const key = e.key.toLowerCase()\n        const customShortcuts = ['b', 'i', 'd', 'q', 'k', 'l', 'o', 't']\n\n        if (customShortcuts.includes(key)) {\n          if (key === 'b') this.handleFormat('bold')\n          if (key === 'i') this.handleFormat('italic')\n          if (key === 'd') this.handleFormat('strikethrough')\n          if (key === 'q') this.handleFormat('quote')\n          if (key === 'k') this.handleFormat('link')\n          if (key === 'l') this.handleFormat('ul')\n          if (key === 'o') this.handleFormat('ol')\n          if (key === 't') this.handleFormat('taskList')\n          e.preventDefault()\n        }\n      }\n    },\n    handlePaste(event) {\n      event.preventDefault()\n      const text = event.clipboardData.getData('text/plain')\n      const selection = this.getSelectionRange()\n      const content = this.getMarkdownContent()\n      const newContent = content.slice(0, selection.start) + text + content.slice(selection.end)\n      \n      // 计算新光标位置\n      const newSelection = {\n        start: selection.start + text.length,\n        end: selection.start + text.length\n      }\n      \n      this.setMarkdownContent(newContent, newSelection)\n      this.updatePreview()\n    },\n    getSelectionRange() {\n      const selection = window.getSelection()\n      if (!selection.rangeCount) return { start: 0, end: 0, text: '' }\n\n      const editor = this.$refs.editor\n      const range = selection.getRangeAt(0)\n      const preRange = document.createRange()\n      preRange.selectNodeContents(editor)\n      preRange.setEnd(range.startContainer, range.startOffset)\n      const start = preRange.toString().length\n      preRange.setEnd(range.endContainer, range.endOffset)\n      const end = preRange.toString().length\n      return { start, end, text: range.toString() }\n    },\n    getMarkdownContent() {\n      const editor = this.$refs.editor\n      let markdown = ''\n\n      const walk = (node) => {\n        if (node.nodeType === Node.TEXT_NODE) {\n          markdown += node.textContent\n        } else if (node.nodeType === Node.ELEMENT_NODE) {\n          if (node.tagName === 'IMG') {\n            markdown += `![${node.alt || '图片'}](${node.src})`\n          } else if (node.tagName === 'BR') {\n            markdown += '\\n'\n          } else if (node.tagName === 'TABLE') {\n            let tableMarkdown = ''\n            Array.from(node.rows).forEach((row, rowIndex) => {\n              const cells = Array.from(row.cells).map(cell => cell.textContent.trim())\n              if (rowIndex === 0) {\n                tableMarkdown += '|' + cells.join(' | ') + '|\\n'\n                tableMarkdown += '|' + cells.map(cell => '-'.repeat(cell.length)).join(' | ') + '|\\n'\n              } else {\n                tableMarkdown += '|' + cells.join(' | ') + '|\\n'\n              }\n            })\n            markdown += tableMarkdown\n          } else {\n            Array.from(node.childNodes).forEach(childNode => walk(childNode))\n          }\n        }\n      }\n\n      walk(editor)\n      return markdown\n    },\n    setMarkdownContent(content, newSelection = null) {\n      const selection = window.getSelection()\n      const hadSelection = selection.rangeCount > 0\n      let savedRange = null\n\n      if (hadSelection) {\n        savedRange = selection.getRangeAt(0).cloneRange()\n      }\n\n      // 修复空行问题：只处理图片，不处理换行\n      this.$refs.editor.innerHTML = content.replace(/\\!\\[.*?\\]\\((.*?)\\)/g, (match, url) => {\n        return `<img src=\"${url}\" alt=\"图片\" class=\"editor-image\">`\n      })\n\n      // 优先使用传入的新选区\n      if (newSelection) {\n        this.$nextTick(() => {\n          const newRange = document.createRange()\n          newRange.setStart(this.$refs.editor.firstChild, newSelection.start)\n          newRange.setEnd(this.$refs.editor.firstChild, newSelection.end)\n          const sel = window.getSelection()\n          sel.removeAllRanges()\n          sel.addRange(newRange)\n        })\n      } else if (hadSelection && savedRange) {\n        this.$nextTick(() => {\n          const newRange = document.createRange()\n          newRange.setStart(this.$refs.editor.firstChild, savedRange.startOffset)\n          newRange.setEnd(this.$refs.editor.firstChild, savedRange.endOffset)\n          const sel = window.getSelection()\n          sel.removeAllRanges()\n          sel.addRange(newRange)\n        })\n      }\n\n      this.updatePreview()\n    },\n    handleImageSelect() {\n      this.$refs.imageInput.click()\n    },\n    handleImageUpload(event) {\n      const file = event.target.files[0]\n      if (!file) return\n\n      const reader = new FileReader()\n      reader.onload = (e) => {\n        const base64 = e.target.result\n        const selection = this.getSelectionRange()\n        const markdownImage = `![图片](${base64})`\n\n        const currentContent = this.getMarkdownContent()\n        const newContent = currentContent.slice(0, selection.start) +\n                           markdownImage +\n                           currentContent.slice(selection.end)\n        \n        // 计算新光标位置\n        const newSelection = {\n          start: selection.start + markdownImage.length,\n          end: selection.start + markdownImage.length\n        }\n        \n        this.setMarkdownContent(newContent, newSelection)\n      }\n      reader.readAsDataURL(file)\n    },\n    insertLink(selection) {\n      const linkText = prompt('输入链接文本:', selection.text) || selection.text\n      const url = prompt('输入链接地址:')\n      if (!url) return\n\n      if (selection.text.includes('![图片]')) {\n        alert('图片区域无法插入链接')\n        return\n      }\n\n      const markdownLink = `[${linkText}](${url})`\n      const content = this.getMarkdownContent()\n      const newContent = content.slice(0, selection.start) + markdownLink + content.slice(selection.end)\n      \n      // 计算新光标位置\n      const newSelection = {\n        start: selection.start + markdownLink.length,\n        end: selection.start + markdownLink.length\n      }\n      \n      this.setMarkdownContent(newContent, newSelection)\n    },\n    toggleFileMenu() {\n      this.showFileMenu = !this.showFileMenu\n    },\n    closeFileMenu(event) {\n      if (this.$refs.fileMenu && !this.$refs.fileMenu.contains(event.target)) {\n        this.showFileMenu = false\n      }\n    },\n    handleMenuClick(action) {\n      this.showFileMenu = false\n      switch (action) {\n        case 'save': this.saveFile(); break\n        case 'load': this.loadFile(); break\n        case 'exportHTML': this.exportAsHTML(); break\n        case 'exportPDF': this.exportAsPDF(); break\n      }\n    },\n    changeTheme() {\n      this.theme = this.theme === '极昼' ? '极夜' : '极昼'\n      document.documentElement.setAttribute('data-theme', this.theme)\n    },\n    saveFile() {\n      const blob = new Blob([this.getMarkdownContent()], { type: 'text/markdown' })\n      const link = document.createElement('a')\n      link.href = URL.createObjectURL(blob)\n      link.download = 'document.md'\n      link.click()\n    },\n    loadFile() {\n      const input = document.createElement('input')\n      input.type = 'file'\n      input.accept = '.md,.markdown'\n      input.onchange = e => {\n        const file = e.target.files[0]\n        const reader = new FileReader()\n        reader.onload = () => {\n          this.setMarkdownContent(reader.result)\n        }\n        reader.readAsText(file)\n      }\n      input.click()\n    },\n    exportAsHTML() {\n      exportAsHTML(this.previewContent, 'markdown_export', { theme: this.theme })\n    },\n    async exportAsPDF() {\n      try {\n        await exportAsPDF(this.previewContent, 'markdown_export', { theme: this.theme })\n      } catch (error) {\n        console.error('导出PDF失败:', error)\n        alert('导出PDF失败，请重试')\n      }\n    }\n  }\n}\n</script>\n\n\n<style>\n\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --bg-color: #ffffff;\n  --text-color: #333333;\n  --border-color: #e0e0e0;\n  --toolbar-bg: #f5f5f5;\n  --tool-btn-bg: #ffffff;\n  --tool-btn-hover: #eaeaea;\n  --menu-bg: #ffffff;\n  --menu-item-hover: #f0f0f0;\r\n  --table-header-bg: #f5f5f5;\r\n  --table-row-even-bg: #f9f9f9;\n}\n\n[data-theme=\"dark\"] {\n  --bg-color: #1e1e1e;\n  --text-color: #e0e0e0;\n  --border-color: #444444;\n  --toolbar-bg: #2d2d2d;\n  --tool-btn-bg: #3d3d3d;\n  --tool-btn-hover: #4d4d4d;\n  --menu-bg: #3d3d3d;\n  --menu-item-hover: #4d4d4d;\r\n  --table-header-bg: #3d3d3d;\r\n  --table-row-even-bg: #2d2d2d;\n}\n\n.app-container {\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  background-color: var(--bg-color);\n  color: var(--text-color);\n}\n\n/* 工具栏样式 */\n.toolbar {\n  padding: 8px 15px;\n  background-color: var(--toolbar-bg);\n  border-bottom: 1px solid var(--border-color);\n  display: flex;\n  align-items: center;\n  gap: 15px;\n}\n\n/* 文件菜单 */\n.file-menu-wrapper {\n  position: relative;\n  display: inline-block;\n}\n\n.file-menu-btn {\n  padding: 8px 15px;\n  background-color: var(--tool-btn-bg);\n  border: 1px solid var(--border-color);\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 14px;\n  transition: all 0.2s;\n}\n\n.file-menu-btn:hover, .file-menu-btn.active {\n  background-color: var(--tool-btn-hover);\n}\n\n.file-menu-dropdown {\n  position: absolute;\n  top: 100%;\n  left: 0;\n  min-width: 120px;\n  background-color: var(--menu-bg);\n  border: 1px solid var(--border-color);\n  border-radius: 4px;\n  box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n  z-index: 1000;\n  margin-top: 5px;\n}\n\n.file-menu-dropdown button {\n  display: block;\n  width: 100%;\n  padding: 8px 16px;\n  text-align: left;\n  background: none;\n  border: none;\n  color: var(--text-color);\n  cursor: pointer;\n}\n\n.file-menu-dropdown button:hover {\n  background-color: var(--menu-item-hover);\n}\n\n/* 过渡动画 */\n.fade-enter-active, .fade-leave-active {\n  transition: opacity 0.3s, transform 0.3s;\n}\n.fade-enter, .fade-leave-to {\n  opacity: 0;\n  transform: translateY(-10px);\n}\n\n/* 格式按钮 */\n.format-buttons {\n  display: flex;\n  gap: 8px;\n}\n\n.tool-btn {\n  padding: 8px 12px;\n  background-color: var(--tool-btn-bg);\n  border: 1px solid var(--border-color);\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 14px;\n  transition: all 0.2s;\n}\n\n.tool-btn:hover {\n  background-color: var(--tool-btn-hover);\n}\n\n.tool-btn:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n/* 字体设置 */\n.font-settings {\n  margin-left: auto;\n  display: flex;\n  gap: 8px;\n  align-items: center;\n}\n\n.font-select, .size-select {\n  padding: 6px 8px;\n  border: 1px solid var(--border-color);\n  border-radius: 4px;\n  background-color: var(--tool-btn-bg);\n  color: var(--text-color);\n}\n\n.theme-btn {\n  padding: 6px 12px;\n  background-color: var(--tool-btn-bg);\n  border: 1px solid var(--border-color);\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n/* 编辑器区域 */\n.editor-wrapper {\n  display: flex;\n  flex: 1;\n  overflow: hidden;\n}\n\n.editor, .preview {\n  flex: 1;\n  padding: 20px;\n  overflow: auto;\n}\r\n\n.editor img {\n  max-width: 100%;\n  height: auto;\n  display: block;\n  margin: 12px 0;\n  border-radius: 8px;\n  box-shadow: 0 4px 12px rgba(0,0,0,0.15);\n  cursor: pointer;\n}\r\n\n.editor {\n  padding: 20px;\n  border-right: 1px solid var(--border-color);\n  resize: none;\n  line-height: 1.6;\n  background-color: var(--bg-color);\n  color: var(--text-color);\n  outline: none;\n  min-height: 200px;\r\n  white-space: pre-wrap;\n}\r\n\r\n.editor-image {\n  max-width: 100px;\n  max-height: 100px;\n  vertical-align: middle;\n  margin: 0 4px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  padding: 2px;\n  background: white;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n  cursor: pointer;\n  transition: all 0.2s ease;\r\n  white-space: pre-wrap;\n}\r\n\n.preview {\n  padding: 20px;\n  overflow: auto;             /* 超出时显示滚动条 */\n  word-break: break-word;     /* 长文本自动换行 */\n}\n\n/* 预览区域Markdown样式 */\r\n.preview table {\n  border-collapse: collapse;\n  width: 100%;\n  margin: 16px 0;\n  display: block;\n  overflow-x: auto;\n}\n\n.preview th, .preview td {\n  padding: 8px 12px;\n  border: 1px solid var(--border-color);\n}\n\n.preview th {\n  background-color: var(--table-header-bg);\n  font-weight: bold;\n}\n\n.preview tr:nth-child(even) {\n  background-color: var(--table-row-even-bg);\n}\n\n.preview h1, .preview h2, .preview h3 {\n  margin: 20px 0 10px;\n}\n\n.preview ul, .preview ol {\n  padding-left: 30px;\n  margin: 10px 0;\n}\n\n.preview code {\n  background-color: rgba(215, 215, 215, 0.2);\n  padding: 0.2em 0.4em;\n  border-radius: 3px;\n  font-family: 'Consolas', monospace;\n}\n\n.preview pre {\n  background-color: rgba(215, 215, 215, 0.2);\n  padding: 16px;\n  border-radius: 3px;\n  overflow: auto;\n  margin: 10px 0;\n}\n\n.preview blockquote {\n  border-left: 4px solid #dfe2e5;\n  color: #6a737d;\n  padding: 0 1em;\n  margin: 10px 0;\n}\r\n\r\n.preview img {\n  max-width: 100%;\n  height: auto;\n  display: block;\n  margin: 12px 0;\n  border-radius: 8px;\n  box-shadow: 0 4px 12px rgba(0,0,0,0.15);\n  transition: transform 0.2s ease;\n}\n\n.preview img:hover {\n  transform: scale(1.03);     /* 悬停轻微放大 */\n  box-shadow: 0 6px 16px rgba(0,0,0,0.2); /* 悬停阴影加深 */\n}\r\n\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}